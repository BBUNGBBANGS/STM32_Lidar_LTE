ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_hal_msp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_MspInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_MspInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB133:
  28              		.file 1 "Core/Src/stm32f3xx_hal_msp.c"
   1:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f3xx_hal_msp.c **** /**
   3:Core/Src/stm32f3xx_hal_msp.c ****   ******************************************************************************
   4:Core/Src/stm32f3xx_hal_msp.c ****   * @file         stm32f3xx_hal_msp.c
   5:Core/Src/stm32f3xx_hal_msp.c ****   * @brief        This file provides code for the MSP Initialization
   6:Core/Src/stm32f3xx_hal_msp.c ****   *               and de-Initialization codes.
   7:Core/Src/stm32f3xx_hal_msp.c ****   ******************************************************************************
   8:Core/Src/stm32f3xx_hal_msp.c ****   * @attention
   9:Core/Src/stm32f3xx_hal_msp.c ****   *
  10:Core/Src/stm32f3xx_hal_msp.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/stm32f3xx_hal_msp.c ****   * All rights reserved.
  12:Core/Src/stm32f3xx_hal_msp.c ****   *
  13:Core/Src/stm32f3xx_hal_msp.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/stm32f3xx_hal_msp.c ****   * in the root directory of this software component.
  15:Core/Src/stm32f3xx_hal_msp.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/stm32f3xx_hal_msp.c ****   *
  17:Core/Src/stm32f3xx_hal_msp.c ****   ******************************************************************************
  18:Core/Src/stm32f3xx_hal_msp.c ****   */
  19:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END Header */
  20:Core/Src/stm32f3xx_hal_msp.c **** 
  21:Core/Src/stm32f3xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f3xx_hal_msp.c **** #include "main.h"
  23:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/stm32f3xx_hal_msp.c **** 
  25:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f3xx_hal_msp.c **** 
  27:Core/Src/stm32f3xx_hal_msp.c **** 
  28:Core/Src/stm32f3xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f3xx_hal_msp.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 2


  31:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END TD */
  32:Core/Src/stm32f3xx_hal_msp.c **** 
  33:Core/Src/stm32f3xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN Define */
  35:Core/Src/stm32f3xx_hal_msp.c **** 
  36:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END Define */
  37:Core/Src/stm32f3xx_hal_msp.c **** 
  38:Core/Src/stm32f3xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  40:Core/Src/stm32f3xx_hal_msp.c **** 
  41:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END Macro */
  42:Core/Src/stm32f3xx_hal_msp.c **** 
  43:Core/Src/stm32f3xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f3xx_hal_msp.c **** 
  46:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END PV */
  47:Core/Src/stm32f3xx_hal_msp.c **** 
  48:Core/Src/stm32f3xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f3xx_hal_msp.c **** 
  51:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f3xx_hal_msp.c **** 
  53:Core/Src/stm32f3xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  54:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  55:Core/Src/stm32f3xx_hal_msp.c **** 
  56:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  57:Core/Src/stm32f3xx_hal_msp.c **** 
  58:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/stm32f3xx_hal_msp.c **** 
  60:Core/Src/stm32f3xx_hal_msp.c **** /* USER CODE END 0 */
  61:Core/Src/stm32f3xx_hal_msp.c **** 
  62:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
  63:Core/Src/stm32f3xx_hal_msp.c ****                     /**
  64:Core/Src/stm32f3xx_hal_msp.c ****   * Initializes the Global MSP.
  65:Core/Src/stm32f3xx_hal_msp.c ****   */
  66:Core/Src/stm32f3xx_hal_msp.c **** void HAL_MspInit(void)
  67:Core/Src/stm32f3xx_hal_msp.c **** {
  29              		.loc 1 67 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  68:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  69:Core/Src/stm32f3xx_hal_msp.c **** 
  70:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  71:Core/Src/stm32f3xx_hal_msp.c **** 
  72:Core/Src/stm32f3xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  37              		.loc 1 72 3 view .LVU1
  38              	.LBB6:
  39              		.loc 1 72 3 view .LVU2
  40              		.loc 1 72 3 view .LVU3
  41 0002 0A4B     		ldr	r3, .L3
  42 0004 9A69     		ldr	r2, [r3, #24]
  43 0006 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 3


  44 000a 9A61     		str	r2, [r3, #24]
  45              		.loc 1 72 3 view .LVU4
  46 000c 9A69     		ldr	r2, [r3, #24]
  47 000e 02F00102 		and	r2, r2, #1
  48 0012 0092     		str	r2, [sp]
  49              		.loc 1 72 3 view .LVU5
  50 0014 009A     		ldr	r2, [sp]
  51              	.LBE6:
  52              		.loc 1 72 3 view .LVU6
  73:Core/Src/stm32f3xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  53              		.loc 1 73 3 view .LVU7
  54              	.LBB7:
  55              		.loc 1 73 3 view .LVU8
  56              		.loc 1 73 3 view .LVU9
  57 0016 DA69     		ldr	r2, [r3, #28]
  58 0018 42F08052 		orr	r2, r2, #268435456
  59 001c DA61     		str	r2, [r3, #28]
  60              		.loc 1 73 3 view .LVU10
  61 001e DB69     		ldr	r3, [r3, #28]
  62 0020 03F08053 		and	r3, r3, #268435456
  63 0024 0193     		str	r3, [sp, #4]
  64              		.loc 1 73 3 view .LVU11
  65 0026 019B     		ldr	r3, [sp, #4]
  66              	.LBE7:
  67              		.loc 1 73 3 view .LVU12
  74:Core/Src/stm32f3xx_hal_msp.c **** 
  75:Core/Src/stm32f3xx_hal_msp.c ****   /* System interrupt init*/
  76:Core/Src/stm32f3xx_hal_msp.c **** 
  77:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
  78:Core/Src/stm32f3xx_hal_msp.c **** 
  79:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
  80:Core/Src/stm32f3xx_hal_msp.c **** }
  68              		.loc 1 80 1 is_stmt 0 view .LVU13
  69 0028 02B0     		add	sp, sp, #8
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 0
  72              		@ sp needed
  73 002a 7047     		bx	lr
  74              	.L4:
  75              		.align	2
  76              	.L3:
  77 002c 00100240 		.word	1073876992
  78              		.cfi_endproc
  79              	.LFE133:
  81              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_ADC_MspInit
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	HAL_ADC_MspInit:
  89              	.LVL0:
  90              	.LFB134:
  81:Core/Src/stm32f3xx_hal_msp.c **** 
  82:Core/Src/stm32f3xx_hal_msp.c **** /**
  83:Core/Src/stm32f3xx_hal_msp.c **** * @brief ADC MSP Initialization
  84:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 4


  85:Core/Src/stm32f3xx_hal_msp.c **** * @param hadc: ADC handle pointer
  86:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
  87:Core/Src/stm32f3xx_hal_msp.c **** */
  88:Core/Src/stm32f3xx_hal_msp.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
  89:Core/Src/stm32f3xx_hal_msp.c **** {
  91              		.loc 1 89 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 32
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		.loc 1 89 1 is_stmt 0 view .LVU15
  96 0000 10B5     		push	{r4, lr}
  97              	.LCFI2:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 14, -4
 101 0002 88B0     		sub	sp, sp, #32
 102              	.LCFI3:
 103              		.cfi_def_cfa_offset 40
  90:Core/Src/stm32f3xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 104              		.loc 1 90 3 is_stmt 1 view .LVU16
 105              		.loc 1 90 20 is_stmt 0 view .LVU17
 106 0004 0023     		movs	r3, #0
 107 0006 0393     		str	r3, [sp, #12]
 108 0008 0493     		str	r3, [sp, #16]
 109 000a 0593     		str	r3, [sp, #20]
 110 000c 0693     		str	r3, [sp, #24]
 111 000e 0793     		str	r3, [sp, #28]
  91:Core/Src/stm32f3xx_hal_msp.c ****   if(hadc->Instance==ADC2)
 112              		.loc 1 91 3 is_stmt 1 view .LVU18
 113              		.loc 1 91 10 is_stmt 0 view .LVU19
 114 0010 0268     		ldr	r2, [r0]
 115              		.loc 1 91 5 view .LVU20
 116 0012 224B     		ldr	r3, .L11
 117 0014 9A42     		cmp	r2, r3
 118 0016 01D0     		beq	.L9
 119              	.LVL1:
 120              	.L5:
  92:Core/Src/stm32f3xx_hal_msp.c ****   {
  93:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 0 */
  94:Core/Src/stm32f3xx_hal_msp.c **** 
  95:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 0 */
  96:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
  97:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_ADC12_CLK_ENABLE();
  98:Core/Src/stm32f3xx_hal_msp.c **** 
  99:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 100:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 101:Core/Src/stm32f3xx_hal_msp.c ****     PA6     ------> ADC2_IN3
 102:Core/Src/stm32f3xx_hal_msp.c ****     */
 103:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = BAT_ADC_Pin;
 104:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 105:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 106:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(BAT_ADC_GPIO_Port, &GPIO_InitStruct);
 107:Core/Src/stm32f3xx_hal_msp.c **** 
 108:Core/Src/stm32f3xx_hal_msp.c ****     /* ADC2 DMA Init */
 109:Core/Src/stm32f3xx_hal_msp.c ****     /* ADC2 Init */
 110:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Instance = DMA2_Channel1;
 111:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 5


 112:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 113:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 114:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 115:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 116:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 117:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 118:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 119:Core/Src/stm32f3xx_hal_msp.c ****     {
 120:Core/Src/stm32f3xx_hal_msp.c ****       Error_Handler();
 121:Core/Src/stm32f3xx_hal_msp.c ****     }
 122:Core/Src/stm32f3xx_hal_msp.c **** 
 123:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc2);
 124:Core/Src/stm32f3xx_hal_msp.c **** 
 125:Core/Src/stm32f3xx_hal_msp.c ****     /* ADC2 interrupt Init */
 126:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(ADC1_2_IRQn, 2, 0);
 127:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 128:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 129:Core/Src/stm32f3xx_hal_msp.c **** 
 130:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END ADC2_MspInit 1 */
 131:Core/Src/stm32f3xx_hal_msp.c ****   }
 132:Core/Src/stm32f3xx_hal_msp.c **** 
 133:Core/Src/stm32f3xx_hal_msp.c **** }
 121              		.loc 1 133 1 view .LVU21
 122 0018 08B0     		add	sp, sp, #32
 123              	.LCFI4:
 124              		.cfi_remember_state
 125              		.cfi_def_cfa_offset 8
 126              		@ sp needed
 127 001a 10BD     		pop	{r4, pc}
 128              	.LVL2:
 129              	.L9:
 130              	.LCFI5:
 131              		.cfi_restore_state
 132              		.loc 1 133 1 view .LVU22
 133 001c 0446     		mov	r4, r0
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 134              		.loc 1 97 5 is_stmt 1 view .LVU23
 135              	.LBB8:
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 136              		.loc 1 97 5 view .LVU24
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 137              		.loc 1 97 5 view .LVU25
 138 001e 204B     		ldr	r3, .L11+4
 139 0020 5A69     		ldr	r2, [r3, #20]
 140 0022 42F08052 		orr	r2, r2, #268435456
 141 0026 5A61     		str	r2, [r3, #20]
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 142              		.loc 1 97 5 view .LVU26
 143 0028 5A69     		ldr	r2, [r3, #20]
 144 002a 02F08052 		and	r2, r2, #268435456
 145 002e 0192     		str	r2, [sp, #4]
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 146              		.loc 1 97 5 view .LVU27
 147 0030 019A     		ldr	r2, [sp, #4]
 148              	.LBE8:
  97:Core/Src/stm32f3xx_hal_msp.c **** 
 149              		.loc 1 97 5 view .LVU28
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 6


  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 150              		.loc 1 99 5 view .LVU29
 151              	.LBB9:
  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 152              		.loc 1 99 5 view .LVU30
  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 153              		.loc 1 99 5 view .LVU31
 154 0032 5A69     		ldr	r2, [r3, #20]
 155 0034 42F40032 		orr	r2, r2, #131072
 156 0038 5A61     		str	r2, [r3, #20]
  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 157              		.loc 1 99 5 view .LVU32
 158 003a 5B69     		ldr	r3, [r3, #20]
 159 003c 03F40033 		and	r3, r3, #131072
 160 0040 0293     		str	r3, [sp, #8]
  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 161              		.loc 1 99 5 view .LVU33
 162 0042 029B     		ldr	r3, [sp, #8]
 163              	.LBE9:
  99:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 164              		.loc 1 99 5 view .LVU34
 103:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 165              		.loc 1 103 5 view .LVU35
 103:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 166              		.loc 1 103 25 is_stmt 0 view .LVU36
 167 0044 4023     		movs	r3, #64
 168 0046 0393     		str	r3, [sp, #12]
 104:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 169              		.loc 1 104 5 is_stmt 1 view .LVU37
 104:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 170              		.loc 1 104 26 is_stmt 0 view .LVU38
 171 0048 0323     		movs	r3, #3
 172 004a 0493     		str	r3, [sp, #16]
 105:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(BAT_ADC_GPIO_Port, &GPIO_InitStruct);
 173              		.loc 1 105 5 is_stmt 1 view .LVU39
 106:Core/Src/stm32f3xx_hal_msp.c **** 
 174              		.loc 1 106 5 view .LVU40
 175 004c 03A9     		add	r1, sp, #12
 176 004e 4FF09040 		mov	r0, #1207959552
 177              	.LVL3:
 106:Core/Src/stm32f3xx_hal_msp.c **** 
 178              		.loc 1 106 5 is_stmt 0 view .LVU41
 179 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 180              	.LVL4:
 110:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 181              		.loc 1 110 5 is_stmt 1 view .LVU42
 110:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 182              		.loc 1 110 24 is_stmt 0 view .LVU43
 183 0056 1348     		ldr	r0, .L11+8
 184 0058 134B     		ldr	r3, .L11+12
 185 005a 0360     		str	r3, [r0]
 111:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 186              		.loc 1 111 5 is_stmt 1 view .LVU44
 111:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 187              		.loc 1 111 30 is_stmt 0 view .LVU45
 188 005c 0023     		movs	r3, #0
 189 005e 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 7


 112:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 190              		.loc 1 112 5 is_stmt 1 view .LVU46
 112:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 191              		.loc 1 112 30 is_stmt 0 view .LVU47
 192 0060 8360     		str	r3, [r0, #8]
 113:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 193              		.loc 1 113 5 is_stmt 1 view .LVU48
 113:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 194              		.loc 1 113 27 is_stmt 0 view .LVU49
 195 0062 8022     		movs	r2, #128
 196 0064 C260     		str	r2, [r0, #12]
 114:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 197              		.loc 1 114 5 is_stmt 1 view .LVU50
 114:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 198              		.loc 1 114 40 is_stmt 0 view .LVU51
 199 0066 4FF48072 		mov	r2, #256
 200 006a 0261     		str	r2, [r0, #16]
 115:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 201              		.loc 1 115 5 is_stmt 1 view .LVU52
 115:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Mode = DMA_CIRCULAR;
 202              		.loc 1 115 37 is_stmt 0 view .LVU53
 203 006c 4FF48062 		mov	r2, #1024
 204 0070 4261     		str	r2, [r0, #20]
 116:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 205              		.loc 1 116 5 is_stmt 1 view .LVU54
 116:Core/Src/stm32f3xx_hal_msp.c ****     hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 206              		.loc 1 116 25 is_stmt 0 view .LVU55
 207 0072 2022     		movs	r2, #32
 208 0074 8261     		str	r2, [r0, #24]
 117:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 209              		.loc 1 117 5 is_stmt 1 view .LVU56
 117:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 210              		.loc 1 117 29 is_stmt 0 view .LVU57
 211 0076 C361     		str	r3, [r0, #28]
 118:Core/Src/stm32f3xx_hal_msp.c ****     {
 212              		.loc 1 118 5 is_stmt 1 view .LVU58
 118:Core/Src/stm32f3xx_hal_msp.c ****     {
 213              		.loc 1 118 9 is_stmt 0 view .LVU59
 214 0078 FFF7FEFF 		bl	HAL_DMA_Init
 215              	.LVL5:
 118:Core/Src/stm32f3xx_hal_msp.c ****     {
 216              		.loc 1 118 8 view .LVU60
 217 007c 58B9     		cbnz	r0, .L10
 218              	.L7:
 123:Core/Src/stm32f3xx_hal_msp.c **** 
 219              		.loc 1 123 5 is_stmt 1 view .LVU61
 123:Core/Src/stm32f3xx_hal_msp.c **** 
 220              		.loc 1 123 5 view .LVU62
 221 007e 094B     		ldr	r3, .L11+8
 222 0080 A363     		str	r3, [r4, #56]
 123:Core/Src/stm32f3xx_hal_msp.c **** 
 223              		.loc 1 123 5 view .LVU63
 224 0082 5C62     		str	r4, [r3, #36]
 123:Core/Src/stm32f3xx_hal_msp.c **** 
 225              		.loc 1 123 5 view .LVU64
 126:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 226              		.loc 1 126 5 view .LVU65
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 8


 227 0084 0022     		movs	r2, #0
 228 0086 0221     		movs	r1, #2
 229 0088 1220     		movs	r0, #18
 230 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 231              	.LVL6:
 127:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspInit 1 */
 232              		.loc 1 127 5 view .LVU66
 233 008e 1220     		movs	r0, #18
 234 0090 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 235              	.LVL7:
 236              		.loc 1 133 1 is_stmt 0 view .LVU67
 237 0094 C0E7     		b	.L5
 238              	.L10:
 120:Core/Src/stm32f3xx_hal_msp.c ****     }
 239              		.loc 1 120 7 is_stmt 1 view .LVU68
 240 0096 FFF7FEFF 		bl	Error_Handler
 241              	.LVL8:
 242 009a F0E7     		b	.L7
 243              	.L12:
 244              		.align	2
 245              	.L11:
 246 009c 00010050 		.word	1342177536
 247 00a0 00100240 		.word	1073876992
 248 00a4 00000000 		.word	hdma_adc2
 249 00a8 08040240 		.word	1073873928
 250              		.cfi_endproc
 251              	.LFE134:
 253              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 254              		.align	1
 255              		.global	HAL_ADC_MspDeInit
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 260              	HAL_ADC_MspDeInit:
 261              	.LVL9:
 262              	.LFB135:
 134:Core/Src/stm32f3xx_hal_msp.c **** 
 135:Core/Src/stm32f3xx_hal_msp.c **** /**
 136:Core/Src/stm32f3xx_hal_msp.c **** * @brief ADC MSP De-Initialization
 137:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 138:Core/Src/stm32f3xx_hal_msp.c **** * @param hadc: ADC handle pointer
 139:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 140:Core/Src/stm32f3xx_hal_msp.c **** */
 141:Core/Src/stm32f3xx_hal_msp.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 142:Core/Src/stm32f3xx_hal_msp.c **** {
 263              		.loc 1 142 1 view -0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 143:Core/Src/stm32f3xx_hal_msp.c ****   if(hadc->Instance==ADC2)
 267              		.loc 1 143 3 view .LVU70
 268              		.loc 1 143 10 is_stmt 0 view .LVU71
 269 0000 0268     		ldr	r2, [r0]
 270              		.loc 1 143 5 view .LVU72
 271 0002 0B4B     		ldr	r3, .L20
 272 0004 9A42     		cmp	r2, r3
 273 0006 00D0     		beq	.L19
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 9


 274 0008 7047     		bx	lr
 275              	.L19:
 142:Core/Src/stm32f3xx_hal_msp.c ****   if(hadc->Instance==ADC2)
 276              		.loc 1 142 1 view .LVU73
 277 000a 10B5     		push	{r4, lr}
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 4, -8
 281              		.cfi_offset 14, -4
 282 000c 0446     		mov	r4, r0
 144:Core/Src/stm32f3xx_hal_msp.c ****   {
 145:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 0 */
 146:Core/Src/stm32f3xx_hal_msp.c **** 
 147:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 0 */
 148:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 149:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_ADC12_CLK_DISABLE();
 283              		.loc 1 149 5 is_stmt 1 view .LVU74
 284 000e 094A     		ldr	r2, .L20+4
 285 0010 5369     		ldr	r3, [r2, #20]
 286 0012 23F08053 		bic	r3, r3, #268435456
 287 0016 5361     		str	r3, [r2, #20]
 150:Core/Src/stm32f3xx_hal_msp.c **** 
 151:Core/Src/stm32f3xx_hal_msp.c ****     /**ADC2 GPIO Configuration
 152:Core/Src/stm32f3xx_hal_msp.c ****     PA6     ------> ADC2_IN3
 153:Core/Src/stm32f3xx_hal_msp.c ****     */
 154:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_DeInit(BAT_ADC_GPIO_Port, BAT_ADC_Pin);
 288              		.loc 1 154 5 view .LVU75
 289 0018 4021     		movs	r1, #64
 290 001a 4FF09040 		mov	r0, #1207959552
 291              	.LVL10:
 292              		.loc 1 154 5 is_stmt 0 view .LVU76
 293 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 294              	.LVL11:
 155:Core/Src/stm32f3xx_hal_msp.c **** 
 156:Core/Src/stm32f3xx_hal_msp.c ****     /* ADC2 DMA DeInit */
 157:Core/Src/stm32f3xx_hal_msp.c ****     HAL_DMA_DeInit(hadc->DMA_Handle);
 295              		.loc 1 157 5 is_stmt 1 view .LVU77
 296 0022 A06B     		ldr	r0, [r4, #56]
 297 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 298              	.LVL12:
 158:Core/Src/stm32f3xx_hal_msp.c **** 
 159:Core/Src/stm32f3xx_hal_msp.c ****     /* ADC2 interrupt DeInit */
 160:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(ADC1_2_IRQn);
 299              		.loc 1 160 5 view .LVU78
 300 0028 1220     		movs	r0, #18
 301 002a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 302              	.LVL13:
 161:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN ADC2_MspDeInit 1 */
 162:Core/Src/stm32f3xx_hal_msp.c **** 
 163:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END ADC2_MspDeInit 1 */
 164:Core/Src/stm32f3xx_hal_msp.c ****   }
 165:Core/Src/stm32f3xx_hal_msp.c **** 
 166:Core/Src/stm32f3xx_hal_msp.c **** }
 303              		.loc 1 166 1 is_stmt 0 view .LVU79
 304 002e 10BD     		pop	{r4, pc}
 305              	.LVL14:
 306              	.L21:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 10


 307              		.loc 1 166 1 view .LVU80
 308              		.align	2
 309              	.L20:
 310 0030 00010050 		.word	1342177536
 311 0034 00100240 		.word	1073876992
 312              		.cfi_endproc
 313              	.LFE135:
 315              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 316              		.align	1
 317              		.global	HAL_RTC_MspInit
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	HAL_RTC_MspInit:
 323              	.LVL15:
 324              	.LFB136:
 167:Core/Src/stm32f3xx_hal_msp.c **** 
 168:Core/Src/stm32f3xx_hal_msp.c **** /**
 169:Core/Src/stm32f3xx_hal_msp.c **** * @brief RTC MSP Initialization
 170:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
 171:Core/Src/stm32f3xx_hal_msp.c **** * @param hrtc: RTC handle pointer
 172:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 173:Core/Src/stm32f3xx_hal_msp.c **** */
 174:Core/Src/stm32f3xx_hal_msp.c **** void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 175:Core/Src/stm32f3xx_hal_msp.c **** {
 325              		.loc 1 175 1 is_stmt 1 view -0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              		.loc 1 175 1 is_stmt 0 view .LVU82
 330 0000 08B5     		push	{r3, lr}
 331              	.LCFI7:
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 3, -8
 334              		.cfi_offset 14, -4
 176:Core/Src/stm32f3xx_hal_msp.c ****   if(hrtc->Instance==RTC)
 335              		.loc 1 176 3 is_stmt 1 view .LVU83
 336              		.loc 1 176 10 is_stmt 0 view .LVU84
 337 0002 0268     		ldr	r2, [r0]
 338              		.loc 1 176 5 view .LVU85
 339 0004 0B4B     		ldr	r3, .L26
 340 0006 9A42     		cmp	r2, r3
 341 0008 00D0     		beq	.L25
 342              	.LVL16:
 343              	.L22:
 177:Core/Src/stm32f3xx_hal_msp.c ****   {
 178:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspInit 0 */
 179:Core/Src/stm32f3xx_hal_msp.c **** 
 180:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END RTC_MspInit 0 */
 181:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 182:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_RTC_ENABLE();
 183:Core/Src/stm32f3xx_hal_msp.c ****     /* RTC interrupt Init */
 184:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(RTC_WKUP_IRQn, 0, 0);
 185:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 186:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspInit 1 */
 187:Core/Src/stm32f3xx_hal_msp.c **** 
 188:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END RTC_MspInit 1 */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 11


 189:Core/Src/stm32f3xx_hal_msp.c ****   }
 190:Core/Src/stm32f3xx_hal_msp.c **** 
 191:Core/Src/stm32f3xx_hal_msp.c **** }
 344              		.loc 1 191 1 view .LVU86
 345 000a 08BD     		pop	{r3, pc}
 346              	.LVL17:
 347              	.L25:
 182:Core/Src/stm32f3xx_hal_msp.c ****     /* RTC interrupt Init */
 348              		.loc 1 182 5 is_stmt 1 view .LVU87
 349              	.LBB10:
 350              	.LBI10:
 351              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 12


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 13


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 14


 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 15


 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 16


 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 17


 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 18


 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 19


 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 20


 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 21


 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 22


 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 23


 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 24


 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 25


 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 26


 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 27


 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 28


 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 352              		.loc 2 981 31 view .LVU88
 353              	.LBB11:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 354              		.loc 2 983 3 view .LVU89
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 355              		.loc 2 988 4 view .LVU90
 356 000c 4FF40042 		mov	r2, #32768
 357              		.syntax unified
 358              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 359 0010 92FAA2F2 		rbit r2, r2
 360              	@ 0 "" 2
 361              	.LVL18:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 362              		.loc 2 1001 3 view .LVU91
 363              		.loc 2 1001 3 is_stmt 0 view .LVU92
 364              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 29


 365              		.syntax unified
 366              	.LBE11:
 367              	.LBE10:
 182:Core/Src/stm32f3xx_hal_msp.c ****     /* RTC interrupt Init */
 368              		.loc 1 182 5 view .LVU93
 369 0014 B2FA82F2 		clz	r2, r2
 370 0018 074B     		ldr	r3, .L26+4
 371 001a 1344     		add	r3, r3, r2
 372 001c 9B00     		lsls	r3, r3, #2
 373 001e 0122     		movs	r2, #1
 374 0020 1A60     		str	r2, [r3]
 184:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 375              		.loc 1 184 5 is_stmt 1 view .LVU94
 376 0022 0022     		movs	r2, #0
 377 0024 1146     		mov	r1, r2
 378 0026 0320     		movs	r0, #3
 379              	.LVL19:
 184:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(RTC_WKUP_IRQn);
 380              		.loc 1 184 5 is_stmt 0 view .LVU95
 381 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 382              	.LVL20:
 185:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspInit 1 */
 383              		.loc 1 185 5 is_stmt 1 view .LVU96
 384 002c 0320     		movs	r0, #3
 385 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 386              	.LVL21:
 387              		.loc 1 191 1 is_stmt 0 view .LVU97
 388 0032 EAE7     		b	.L22
 389              	.L27:
 390              		.align	2
 391              	.L26:
 392 0034 00280040 		.word	1073752064
 393 0038 00819010 		.word	277905664
 394              		.cfi_endproc
 395              	.LFE136:
 397              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 398              		.align	1
 399              		.global	HAL_RTC_MspDeInit
 400              		.syntax unified
 401              		.thumb
 402              		.thumb_func
 404              	HAL_RTC_MspDeInit:
 405              	.LVL22:
 406              	.LFB137:
 192:Core/Src/stm32f3xx_hal_msp.c **** 
 193:Core/Src/stm32f3xx_hal_msp.c **** /**
 194:Core/Src/stm32f3xx_hal_msp.c **** * @brief RTC MSP De-Initialization
 195:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 196:Core/Src/stm32f3xx_hal_msp.c **** * @param hrtc: RTC handle pointer
 197:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 198:Core/Src/stm32f3xx_hal_msp.c **** */
 199:Core/Src/stm32f3xx_hal_msp.c **** void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 200:Core/Src/stm32f3xx_hal_msp.c **** {
 407              		.loc 1 200 1 is_stmt 1 view -0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 30


 411              		.loc 1 200 1 is_stmt 0 view .LVU99
 412 0000 08B5     		push	{r3, lr}
 413              	.LCFI8:
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
 201:Core/Src/stm32f3xx_hal_msp.c ****   if(hrtc->Instance==RTC)
 417              		.loc 1 201 3 is_stmt 1 view .LVU100
 418              		.loc 1 201 10 is_stmt 0 view .LVU101
 419 0002 0268     		ldr	r2, [r0]
 420              		.loc 1 201 5 view .LVU102
 421 0004 094B     		ldr	r3, .L32
 422 0006 9A42     		cmp	r2, r3
 423 0008 00D0     		beq	.L31
 424              	.LVL23:
 425              	.L28:
 202:Core/Src/stm32f3xx_hal_msp.c ****   {
 203:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspDeInit 0 */
 204:Core/Src/stm32f3xx_hal_msp.c **** 
 205:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END RTC_MspDeInit 0 */
 206:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 207:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_RTC_DISABLE();
 208:Core/Src/stm32f3xx_hal_msp.c **** 
 209:Core/Src/stm32f3xx_hal_msp.c ****     /* RTC interrupt DeInit */
 210:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(RTC_WKUP_IRQn);
 211:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 212:Core/Src/stm32f3xx_hal_msp.c **** 
 213:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END RTC_MspDeInit 1 */
 214:Core/Src/stm32f3xx_hal_msp.c ****   }
 215:Core/Src/stm32f3xx_hal_msp.c **** 
 216:Core/Src/stm32f3xx_hal_msp.c **** }
 426              		.loc 1 216 1 view .LVU103
 427 000a 08BD     		pop	{r3, pc}
 428              	.LVL24:
 429              	.L31:
 207:Core/Src/stm32f3xx_hal_msp.c **** 
 430              		.loc 1 207 5 is_stmt 1 view .LVU104
 431              	.LBB12:
 432              	.LBI12:
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 433              		.loc 2 981 31 view .LVU105
 434              	.LBB13:
 983:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 435              		.loc 2 983 3 view .LVU106
 988:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 436              		.loc 2 988 4 view .LVU107
 437 000c 4FF40042 		mov	r2, #32768
 438              		.syntax unified
 439              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 440 0010 92FAA2F2 		rbit r2, r2
 441              	@ 0 "" 2
 442              	.LVL25:
 443              		.loc 2 1001 3 view .LVU108
 444              		.loc 2 1001 3 is_stmt 0 view .LVU109
 445              		.thumb
 446              		.syntax unified
 447              	.LBE13:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 31


 448              	.LBE12:
 207:Core/Src/stm32f3xx_hal_msp.c **** 
 449              		.loc 1 207 5 view .LVU110
 450 0014 B2FA82F2 		clz	r2, r2
 451 0018 054B     		ldr	r3, .L32+4
 452 001a 1344     		add	r3, r3, r2
 453 001c 9B00     		lsls	r3, r3, #2
 454 001e 0022     		movs	r2, #0
 455 0020 1A60     		str	r2, [r3]
 210:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 456              		.loc 1 210 5 is_stmt 1 view .LVU111
 457 0022 0320     		movs	r0, #3
 458              	.LVL26:
 210:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN RTC_MspDeInit 1 */
 459              		.loc 1 210 5 is_stmt 0 view .LVU112
 460 0024 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 461              	.LVL27:
 462              		.loc 1 216 1 view .LVU113
 463 0028 EFE7     		b	.L28
 464              	.L33:
 465 002a 00BF     		.align	2
 466              	.L32:
 467 002c 00280040 		.word	1073752064
 468 0030 00819010 		.word	277905664
 469              		.cfi_endproc
 470              	.LFE137:
 472              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 473              		.align	1
 474              		.global	HAL_SPI_MspInit
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 479              	HAL_SPI_MspInit:
 480              	.LVL28:
 481              	.LFB138:
 217:Core/Src/stm32f3xx_hal_msp.c **** 
 218:Core/Src/stm32f3xx_hal_msp.c **** /**
 219:Core/Src/stm32f3xx_hal_msp.c **** * @brief SPI MSP Initialization
 220:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
 221:Core/Src/stm32f3xx_hal_msp.c **** * @param hspi: SPI handle pointer
 222:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 223:Core/Src/stm32f3xx_hal_msp.c **** */
 224:Core/Src/stm32f3xx_hal_msp.c **** void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
 225:Core/Src/stm32f3xx_hal_msp.c **** {
 482              		.loc 1 225 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 32
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              		.loc 1 225 1 is_stmt 0 view .LVU115
 487 0000 00B5     		push	{lr}
 488              	.LCFI9:
 489              		.cfi_def_cfa_offset 4
 490              		.cfi_offset 14, -4
 491 0002 89B0     		sub	sp, sp, #36
 492              	.LCFI10:
 493              		.cfi_def_cfa_offset 40
 226:Core/Src/stm32f3xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 32


 494              		.loc 1 226 3 is_stmt 1 view .LVU116
 495              		.loc 1 226 20 is_stmt 0 view .LVU117
 496 0004 0023     		movs	r3, #0
 497 0006 0393     		str	r3, [sp, #12]
 498 0008 0493     		str	r3, [sp, #16]
 499 000a 0593     		str	r3, [sp, #20]
 500 000c 0693     		str	r3, [sp, #24]
 501 000e 0793     		str	r3, [sp, #28]
 227:Core/Src/stm32f3xx_hal_msp.c ****   if(hspi->Instance==SPI2)
 502              		.loc 1 227 3 is_stmt 1 view .LVU118
 503              		.loc 1 227 10 is_stmt 0 view .LVU119
 504 0010 0268     		ldr	r2, [r0]
 505              		.loc 1 227 5 view .LVU120
 506 0012 144B     		ldr	r3, .L38
 507 0014 9A42     		cmp	r2, r3
 508 0016 02D0     		beq	.L37
 509              	.LVL29:
 510              	.L34:
 228:Core/Src/stm32f3xx_hal_msp.c ****   {
 229:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspInit 0 */
 230:Core/Src/stm32f3xx_hal_msp.c **** 
 231:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END SPI2_MspInit 0 */
 232:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 233:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_SPI2_CLK_ENABLE();
 234:Core/Src/stm32f3xx_hal_msp.c **** 
 235:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 236:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 237:Core/Src/stm32f3xx_hal_msp.c ****     PB13     ------> SPI2_SCK
 238:Core/Src/stm32f3xx_hal_msp.c ****     PB14     ------> SPI2_MISO
 239:Core/Src/stm32f3xx_hal_msp.c ****     PB15     ------> SPI2_MOSI
 240:Core/Src/stm32f3xx_hal_msp.c ****     */
 241:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 242:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 243:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 244:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 245:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 246:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 247:Core/Src/stm32f3xx_hal_msp.c **** 
 248:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspInit 1 */
 249:Core/Src/stm32f3xx_hal_msp.c **** 
 250:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END SPI2_MspInit 1 */
 251:Core/Src/stm32f3xx_hal_msp.c ****   }
 252:Core/Src/stm32f3xx_hal_msp.c **** 
 253:Core/Src/stm32f3xx_hal_msp.c **** }
 511              		.loc 1 253 1 view .LVU121
 512 0018 09B0     		add	sp, sp, #36
 513              	.LCFI11:
 514              		.cfi_remember_state
 515              		.cfi_def_cfa_offset 4
 516              		@ sp needed
 517 001a 5DF804FB 		ldr	pc, [sp], #4
 518              	.LVL30:
 519              	.L37:
 520              	.LCFI12:
 521              		.cfi_restore_state
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 522              		.loc 1 233 5 is_stmt 1 view .LVU122
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 33


 523              	.LBB14:
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 524              		.loc 1 233 5 view .LVU123
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 525              		.loc 1 233 5 view .LVU124
 526 001e 03F5EC33 		add	r3, r3, #120832
 527 0022 DA69     		ldr	r2, [r3, #28]
 528 0024 42F48042 		orr	r2, r2, #16384
 529 0028 DA61     		str	r2, [r3, #28]
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 530              		.loc 1 233 5 view .LVU125
 531 002a DA69     		ldr	r2, [r3, #28]
 532 002c 02F48042 		and	r2, r2, #16384
 533 0030 0192     		str	r2, [sp, #4]
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 534              		.loc 1 233 5 view .LVU126
 535 0032 019A     		ldr	r2, [sp, #4]
 536              	.LBE14:
 233:Core/Src/stm32f3xx_hal_msp.c **** 
 537              		.loc 1 233 5 view .LVU127
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 538              		.loc 1 235 5 view .LVU128
 539              	.LBB15:
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 540              		.loc 1 235 5 view .LVU129
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 541              		.loc 1 235 5 view .LVU130
 542 0034 5A69     		ldr	r2, [r3, #20]
 543 0036 42F48022 		orr	r2, r2, #262144
 544 003a 5A61     		str	r2, [r3, #20]
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 545              		.loc 1 235 5 view .LVU131
 546 003c 5B69     		ldr	r3, [r3, #20]
 547 003e 03F48023 		and	r3, r3, #262144
 548 0042 0293     		str	r3, [sp, #8]
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 549              		.loc 1 235 5 view .LVU132
 550 0044 029B     		ldr	r3, [sp, #8]
 551              	.LBE15:
 235:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 552              		.loc 1 235 5 view .LVU133
 241:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 553              		.loc 1 241 5 view .LVU134
 241:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 554              		.loc 1 241 25 is_stmt 0 view .LVU135
 555 0046 4FF46043 		mov	r3, #57344
 556 004a 0393     		str	r3, [sp, #12]
 242:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 557              		.loc 1 242 5 is_stmt 1 view .LVU136
 242:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 558              		.loc 1 242 26 is_stmt 0 view .LVU137
 559 004c 0223     		movs	r3, #2
 560 004e 0493     		str	r3, [sp, #16]
 243:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 561              		.loc 1 243 5 is_stmt 1 view .LVU138
 244:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 562              		.loc 1 244 5 view .LVU139
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 34


 244:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 563              		.loc 1 244 27 is_stmt 0 view .LVU140
 564 0050 0323     		movs	r3, #3
 565 0052 0693     		str	r3, [sp, #24]
 245:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 566              		.loc 1 245 5 is_stmt 1 view .LVU141
 245:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 567              		.loc 1 245 31 is_stmt 0 view .LVU142
 568 0054 0523     		movs	r3, #5
 569 0056 0793     		str	r3, [sp, #28]
 246:Core/Src/stm32f3xx_hal_msp.c **** 
 570              		.loc 1 246 5 is_stmt 1 view .LVU143
 571 0058 03A9     		add	r1, sp, #12
 572 005a 0348     		ldr	r0, .L38+4
 573              	.LVL31:
 246:Core/Src/stm32f3xx_hal_msp.c **** 
 574              		.loc 1 246 5 is_stmt 0 view .LVU144
 575 005c FFF7FEFF 		bl	HAL_GPIO_Init
 576              	.LVL32:
 577              		.loc 1 253 1 view .LVU145
 578 0060 DAE7     		b	.L34
 579              	.L39:
 580 0062 00BF     		.align	2
 581              	.L38:
 582 0064 00380040 		.word	1073756160
 583 0068 00040048 		.word	1207960576
 584              		.cfi_endproc
 585              	.LFE138:
 587              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_SPI_MspDeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 594              	HAL_SPI_MspDeInit:
 595              	.LVL33:
 596              	.LFB139:
 254:Core/Src/stm32f3xx_hal_msp.c **** 
 255:Core/Src/stm32f3xx_hal_msp.c **** /**
 256:Core/Src/stm32f3xx_hal_msp.c **** * @brief SPI MSP De-Initialization
 257:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 258:Core/Src/stm32f3xx_hal_msp.c **** * @param hspi: SPI handle pointer
 259:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 260:Core/Src/stm32f3xx_hal_msp.c **** */
 261:Core/Src/stm32f3xx_hal_msp.c **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
 262:Core/Src/stm32f3xx_hal_msp.c **** {
 597              		.loc 1 262 1 is_stmt 1 view -0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		.loc 1 262 1 is_stmt 0 view .LVU147
 602 0000 08B5     		push	{r3, lr}
 603              	.LCFI13:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 3, -8
 606              		.cfi_offset 14, -4
 263:Core/Src/stm32f3xx_hal_msp.c ****   if(hspi->Instance==SPI2)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 35


 607              		.loc 1 263 3 is_stmt 1 view .LVU148
 608              		.loc 1 263 10 is_stmt 0 view .LVU149
 609 0002 0268     		ldr	r2, [r0]
 610              		.loc 1 263 5 view .LVU150
 611 0004 074B     		ldr	r3, .L44
 612 0006 9A42     		cmp	r2, r3
 613 0008 00D0     		beq	.L43
 614              	.LVL34:
 615              	.L40:
 264:Core/Src/stm32f3xx_hal_msp.c ****   {
 265:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspDeInit 0 */
 266:Core/Src/stm32f3xx_hal_msp.c **** 
 267:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END SPI2_MspDeInit 0 */
 268:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 269:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_SPI2_CLK_DISABLE();
 270:Core/Src/stm32f3xx_hal_msp.c **** 
 271:Core/Src/stm32f3xx_hal_msp.c ****     /**SPI2 GPIO Configuration
 272:Core/Src/stm32f3xx_hal_msp.c ****     PB13     ------> SPI2_SCK
 273:Core/Src/stm32f3xx_hal_msp.c ****     PB14     ------> SPI2_MISO
 274:Core/Src/stm32f3xx_hal_msp.c ****     PB15     ------> SPI2_MOSI
 275:Core/Src/stm32f3xx_hal_msp.c ****     */
 276:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
 277:Core/Src/stm32f3xx_hal_msp.c **** 
 278:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN SPI2_MspDeInit 1 */
 279:Core/Src/stm32f3xx_hal_msp.c **** 
 280:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END SPI2_MspDeInit 1 */
 281:Core/Src/stm32f3xx_hal_msp.c ****   }
 282:Core/Src/stm32f3xx_hal_msp.c **** 
 283:Core/Src/stm32f3xx_hal_msp.c **** }
 616              		.loc 1 283 1 view .LVU151
 617 000a 08BD     		pop	{r3, pc}
 618              	.LVL35:
 619              	.L43:
 269:Core/Src/stm32f3xx_hal_msp.c **** 
 620              		.loc 1 269 5 is_stmt 1 view .LVU152
 621 000c 064A     		ldr	r2, .L44+4
 622 000e D369     		ldr	r3, [r2, #28]
 623 0010 23F48043 		bic	r3, r3, #16384
 624 0014 D361     		str	r3, [r2, #28]
 276:Core/Src/stm32f3xx_hal_msp.c **** 
 625              		.loc 1 276 5 view .LVU153
 626 0016 4FF46041 		mov	r1, #57344
 627 001a 0448     		ldr	r0, .L44+8
 628              	.LVL36:
 276:Core/Src/stm32f3xx_hal_msp.c **** 
 629              		.loc 1 276 5 is_stmt 0 view .LVU154
 630 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 631              	.LVL37:
 632              		.loc 1 283 1 view .LVU155
 633 0020 F3E7     		b	.L40
 634              	.L45:
 635 0022 00BF     		.align	2
 636              	.L44:
 637 0024 00380040 		.word	1073756160
 638 0028 00100240 		.word	1073876992
 639 002c 00040048 		.word	1207960576
 640              		.cfi_endproc
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 36


 641              	.LFE139:
 643              		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 644              		.align	1
 645              		.global	HAL_TIM_PWM_MspInit
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	HAL_TIM_PWM_MspInit:
 651              	.LVL38:
 652              	.LFB140:
 284:Core/Src/stm32f3xx_hal_msp.c **** 
 285:Core/Src/stm32f3xx_hal_msp.c **** /**
 286:Core/Src/stm32f3xx_hal_msp.c **** * @brief TIM_PWM MSP Initialization
 287:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
 288:Core/Src/stm32f3xx_hal_msp.c **** * @param htim_pwm: TIM_PWM handle pointer
 289:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 290:Core/Src/stm32f3xx_hal_msp.c **** */
 291:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
 292:Core/Src/stm32f3xx_hal_msp.c **** {
 653              		.loc 1 292 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 8
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 293:Core/Src/stm32f3xx_hal_msp.c ****   if(htim_pwm->Instance==TIM3)
 658              		.loc 1 293 3 view .LVU157
 659              		.loc 1 293 14 is_stmt 0 view .LVU158
 660 0000 0268     		ldr	r2, [r0]
 661              		.loc 1 293 5 view .LVU159
 662 0002 094B     		ldr	r3, .L53
 663 0004 9A42     		cmp	r2, r3
 664 0006 00D0     		beq	.L52
 665 0008 7047     		bx	lr
 666              	.L52:
 292:Core/Src/stm32f3xx_hal_msp.c ****   if(htim_pwm->Instance==TIM3)
 667              		.loc 1 292 1 view .LVU160
 668 000a 82B0     		sub	sp, sp, #8
 669              	.LCFI14:
 670              		.cfi_def_cfa_offset 8
 294:Core/Src/stm32f3xx_hal_msp.c ****   {
 295:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 296:Core/Src/stm32f3xx_hal_msp.c **** 
 297:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 0 */
 298:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 299:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 671              		.loc 1 299 5 is_stmt 1 view .LVU161
 672              	.LBB16:
 673              		.loc 1 299 5 view .LVU162
 674              		.loc 1 299 5 view .LVU163
 675 000c 03F50333 		add	r3, r3, #134144
 676 0010 DA69     		ldr	r2, [r3, #28]
 677 0012 42F00202 		orr	r2, r2, #2
 678 0016 DA61     		str	r2, [r3, #28]
 679              		.loc 1 299 5 view .LVU164
 680 0018 DB69     		ldr	r3, [r3, #28]
 681 001a 03F00203 		and	r3, r3, #2
 682 001e 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 37


 683              		.loc 1 299 5 view .LVU165
 684 0020 019B     		ldr	r3, [sp, #4]
 685              	.LBE16:
 686              		.loc 1 299 5 view .LVU166
 300:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 301:Core/Src/stm32f3xx_hal_msp.c **** 
 302:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 1 */
 303:Core/Src/stm32f3xx_hal_msp.c ****   }
 304:Core/Src/stm32f3xx_hal_msp.c **** 
 305:Core/Src/stm32f3xx_hal_msp.c **** }
 687              		.loc 1 305 1 is_stmt 0 view .LVU167
 688 0022 02B0     		add	sp, sp, #8
 689              	.LCFI15:
 690              		.cfi_def_cfa_offset 0
 691              		@ sp needed
 692 0024 7047     		bx	lr
 693              	.L54:
 694 0026 00BF     		.align	2
 695              	.L53:
 696 0028 00040040 		.word	1073742848
 697              		.cfi_endproc
 698              	.LFE140:
 700              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 701              		.align	1
 702              		.global	HAL_TIM_Base_MspInit
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 707              	HAL_TIM_Base_MspInit:
 708              	.LVL39:
 709              	.LFB141:
 306:Core/Src/stm32f3xx_hal_msp.c **** 
 307:Core/Src/stm32f3xx_hal_msp.c **** /**
 308:Core/Src/stm32f3xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
 309:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
 310:Core/Src/stm32f3xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 311:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 312:Core/Src/stm32f3xx_hal_msp.c **** */
 313:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 314:Core/Src/stm32f3xx_hal_msp.c **** {
 710              		.loc 1 314 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 8
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		.loc 1 314 1 is_stmt 0 view .LVU169
 715 0000 00B5     		push	{lr}
 716              	.LCFI16:
 717              		.cfi_def_cfa_offset 4
 718              		.cfi_offset 14, -4
 719 0002 83B0     		sub	sp, sp, #12
 720              	.LCFI17:
 721              		.cfi_def_cfa_offset 16
 315:Core/Src/stm32f3xx_hal_msp.c ****   if(htim_base->Instance==TIM16)
 722              		.loc 1 315 3 is_stmt 1 view .LVU170
 723              		.loc 1 315 15 is_stmt 0 view .LVU171
 724 0004 0368     		ldr	r3, [r0]
 725              		.loc 1 315 5 view .LVU172
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 38


 726 0006 174A     		ldr	r2, .L61
 727 0008 9342     		cmp	r3, r2
 728 000a 05D0     		beq	.L59
 316:Core/Src/stm32f3xx_hal_msp.c ****   {
 317:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 0 */
 318:Core/Src/stm32f3xx_hal_msp.c **** 
 319:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM16_MspInit 0 */
 320:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 321:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM16_CLK_ENABLE();
 322:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 323:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 13, 0);
 324:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 325:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 326:Core/Src/stm32f3xx_hal_msp.c **** 
 327:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM16_MspInit 1 */
 328:Core/Src/stm32f3xx_hal_msp.c ****   }
 329:Core/Src/stm32f3xx_hal_msp.c ****   else if(htim_base->Instance==TIM17)
 729              		.loc 1 329 8 is_stmt 1 view .LVU173
 730              		.loc 1 329 10 is_stmt 0 view .LVU174
 731 000c 164A     		ldr	r2, .L61+4
 732 000e 9342     		cmp	r3, r2
 733 0010 15D0     		beq	.L60
 734              	.LVL40:
 735              	.L55:
 330:Core/Src/stm32f3xx_hal_msp.c ****   {
 331:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 0 */
 332:Core/Src/stm32f3xx_hal_msp.c **** 
 333:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 0 */
 334:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 335:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM17_CLK_ENABLE();
 336:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 337:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 14, 0);
 338:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 339:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 1 */
 340:Core/Src/stm32f3xx_hal_msp.c **** 
 341:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM17_MspInit 1 */
 342:Core/Src/stm32f3xx_hal_msp.c ****   }
 343:Core/Src/stm32f3xx_hal_msp.c **** 
 344:Core/Src/stm32f3xx_hal_msp.c **** }
 736              		.loc 1 344 1 view .LVU175
 737 0012 03B0     		add	sp, sp, #12
 738              	.LCFI18:
 739              		.cfi_remember_state
 740              		.cfi_def_cfa_offset 4
 741              		@ sp needed
 742 0014 5DF804FB 		ldr	pc, [sp], #4
 743              	.LVL41:
 744              	.L59:
 745              	.LCFI19:
 746              		.cfi_restore_state
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 747              		.loc 1 321 5 is_stmt 1 view .LVU176
 748              	.LBB17:
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 749              		.loc 1 321 5 view .LVU177
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 750              		.loc 1 321 5 view .LVU178
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 39


 751 0018 144B     		ldr	r3, .L61+8
 752 001a 9A69     		ldr	r2, [r3, #24]
 753 001c 42F40032 		orr	r2, r2, #131072
 754 0020 9A61     		str	r2, [r3, #24]
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 755              		.loc 1 321 5 view .LVU179
 756 0022 9B69     		ldr	r3, [r3, #24]
 757 0024 03F40033 		and	r3, r3, #131072
 758 0028 0093     		str	r3, [sp]
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 759              		.loc 1 321 5 view .LVU180
 760 002a 009B     		ldr	r3, [sp]
 761              	.LBE17:
 321:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt Init */
 762              		.loc 1 321 5 view .LVU181
 323:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 763              		.loc 1 323 5 view .LVU182
 764 002c 0022     		movs	r2, #0
 765 002e 0D21     		movs	r1, #13
 766 0030 1920     		movs	r0, #25
 767              	.LVL42:
 323:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 768              		.loc 1 323 5 is_stmt 0 view .LVU183
 769 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 770              	.LVL43:
 324:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 771              		.loc 1 324 5 is_stmt 1 view .LVU184
 772 0036 1920     		movs	r0, #25
 773 0038 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 774              	.LVL44:
 775 003c E9E7     		b	.L55
 776              	.LVL45:
 777              	.L60:
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 778              		.loc 1 335 5 view .LVU185
 779              	.LBB18:
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 780              		.loc 1 335 5 view .LVU186
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 781              		.loc 1 335 5 view .LVU187
 782 003e 0B4B     		ldr	r3, .L61+8
 783 0040 9A69     		ldr	r2, [r3, #24]
 784 0042 42F48022 		orr	r2, r2, #262144
 785 0046 9A61     		str	r2, [r3, #24]
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 786              		.loc 1 335 5 view .LVU188
 787 0048 9B69     		ldr	r3, [r3, #24]
 788 004a 03F48023 		and	r3, r3, #262144
 789 004e 0193     		str	r3, [sp, #4]
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 790              		.loc 1 335 5 view .LVU189
 791 0050 019B     		ldr	r3, [sp, #4]
 792              	.LBE18:
 335:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt Init */
 793              		.loc 1 335 5 view .LVU190
 337:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 794              		.loc 1 337 5 view .LVU191
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 40


 795 0052 0022     		movs	r2, #0
 796 0054 0E21     		movs	r1, #14
 797 0056 1A20     		movs	r0, #26
 798              	.LVL46:
 337:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 799              		.loc 1 337 5 is_stmt 0 view .LVU192
 800 0058 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 801              	.LVL47:
 338:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspInit 1 */
 802              		.loc 1 338 5 is_stmt 1 view .LVU193
 803 005c 1A20     		movs	r0, #26
 804 005e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 805              	.LVL48:
 806              		.loc 1 344 1 is_stmt 0 view .LVU194
 807 0062 D6E7     		b	.L55
 808              	.L62:
 809              		.align	2
 810              	.L61:
 811 0064 00440140 		.word	1073824768
 812 0068 00480140 		.word	1073825792
 813 006c 00100240 		.word	1073876992
 814              		.cfi_endproc
 815              	.LFE141:
 817              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 818              		.align	1
 819              		.global	HAL_TIM_MspPostInit
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	HAL_TIM_MspPostInit:
 825              	.LVL49:
 826              	.LFB142:
 345:Core/Src/stm32f3xx_hal_msp.c **** 
 346:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
 347:Core/Src/stm32f3xx_hal_msp.c **** {
 827              		.loc 1 347 1 is_stmt 1 view -0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 24
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              		.loc 1 347 1 is_stmt 0 view .LVU196
 832 0000 00B5     		push	{lr}
 833              	.LCFI20:
 834              		.cfi_def_cfa_offset 4
 835              		.cfi_offset 14, -4
 836 0002 87B0     		sub	sp, sp, #28
 837              	.LCFI21:
 838              		.cfi_def_cfa_offset 32
 348:Core/Src/stm32f3xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 839              		.loc 1 348 3 is_stmt 1 view .LVU197
 840              		.loc 1 348 20 is_stmt 0 view .LVU198
 841 0004 0023     		movs	r3, #0
 842 0006 0193     		str	r3, [sp, #4]
 843 0008 0293     		str	r3, [sp, #8]
 844 000a 0393     		str	r3, [sp, #12]
 845 000c 0493     		str	r3, [sp, #16]
 846 000e 0593     		str	r3, [sp, #20]
 349:Core/Src/stm32f3xx_hal_msp.c ****   if(htim->Instance==TIM3)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 41


 847              		.loc 1 349 3 is_stmt 1 view .LVU199
 848              		.loc 1 349 10 is_stmt 0 view .LVU200
 849 0010 0268     		ldr	r2, [r0]
 850              		.loc 1 349 5 view .LVU201
 851 0012 0D4B     		ldr	r3, .L67
 852 0014 9A42     		cmp	r2, r3
 853 0016 02D0     		beq	.L66
 854              	.LVL50:
 855              	.L63:
 350:Core/Src/stm32f3xx_hal_msp.c ****   {
 351:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 0 */
 352:Core/Src/stm32f3xx_hal_msp.c **** 
 353:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 0 */
 354:Core/Src/stm32f3xx_hal_msp.c **** 
 355:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 356:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 357:Core/Src/stm32f3xx_hal_msp.c ****     PB0     ------> TIM3_CH3
 358:Core/Src/stm32f3xx_hal_msp.c ****     */
 359:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = BUZZER_Pin;
 360:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 361:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 362:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 363:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 364:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(BUZZER_GPIO_Port, &GPIO_InitStruct);
 365:Core/Src/stm32f3xx_hal_msp.c **** 
 366:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspPostInit 1 */
 367:Core/Src/stm32f3xx_hal_msp.c **** 
 368:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspPostInit 1 */
 369:Core/Src/stm32f3xx_hal_msp.c ****   }
 370:Core/Src/stm32f3xx_hal_msp.c **** 
 371:Core/Src/stm32f3xx_hal_msp.c **** }
 856              		.loc 1 371 1 view .LVU202
 857 0018 07B0     		add	sp, sp, #28
 858              	.LCFI22:
 859              		.cfi_remember_state
 860              		.cfi_def_cfa_offset 4
 861              		@ sp needed
 862 001a 5DF804FB 		ldr	pc, [sp], #4
 863              	.LVL51:
 864              	.L66:
 865              	.LCFI23:
 866              		.cfi_restore_state
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 867              		.loc 1 355 5 is_stmt 1 view .LVU203
 868              	.LBB19:
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 869              		.loc 1 355 5 view .LVU204
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 870              		.loc 1 355 5 view .LVU205
 871 001e 03F50333 		add	r3, r3, #134144
 872 0022 5A69     		ldr	r2, [r3, #20]
 873 0024 42F48022 		orr	r2, r2, #262144
 874 0028 5A61     		str	r2, [r3, #20]
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 875              		.loc 1 355 5 view .LVU206
 876 002a 5B69     		ldr	r3, [r3, #20]
 877 002c 03F48023 		and	r3, r3, #262144
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 42


 878 0030 0093     		str	r3, [sp]
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 879              		.loc 1 355 5 view .LVU207
 880 0032 009B     		ldr	r3, [sp]
 881              	.LBE19:
 355:Core/Src/stm32f3xx_hal_msp.c ****     /**TIM3 GPIO Configuration
 882              		.loc 1 355 5 view .LVU208
 359:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 883              		.loc 1 359 5 view .LVU209
 359:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 884              		.loc 1 359 25 is_stmt 0 view .LVU210
 885 0034 0123     		movs	r3, #1
 886 0036 0193     		str	r3, [sp, #4]
 360:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 887              		.loc 1 360 5 is_stmt 1 view .LVU211
 360:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 888              		.loc 1 360 26 is_stmt 0 view .LVU212
 889 0038 0223     		movs	r3, #2
 890 003a 0293     		str	r3, [sp, #8]
 361:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 891              		.loc 1 361 5 is_stmt 1 view .LVU213
 362:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 892              		.loc 1 362 5 view .LVU214
 363:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(BUZZER_GPIO_Port, &GPIO_InitStruct);
 893              		.loc 1 363 5 view .LVU215
 363:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(BUZZER_GPIO_Port, &GPIO_InitStruct);
 894              		.loc 1 363 31 is_stmt 0 view .LVU216
 895 003c 0593     		str	r3, [sp, #20]
 364:Core/Src/stm32f3xx_hal_msp.c **** 
 896              		.loc 1 364 5 is_stmt 1 view .LVU217
 897 003e 01A9     		add	r1, sp, #4
 898 0040 0248     		ldr	r0, .L67+4
 899              	.LVL52:
 364:Core/Src/stm32f3xx_hal_msp.c **** 
 900              		.loc 1 364 5 is_stmt 0 view .LVU218
 901 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 902              	.LVL53:
 903              		.loc 1 371 1 view .LVU219
 904 0046 E7E7     		b	.L63
 905              	.L68:
 906              		.align	2
 907              	.L67:
 908 0048 00040040 		.word	1073742848
 909 004c 00040048 		.word	1207960576
 910              		.cfi_endproc
 911              	.LFE142:
 913              		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 914              		.align	1
 915              		.global	HAL_TIM_PWM_MspDeInit
 916              		.syntax unified
 917              		.thumb
 918              		.thumb_func
 920              	HAL_TIM_PWM_MspDeInit:
 921              	.LVL54:
 922              	.LFB143:
 372:Core/Src/stm32f3xx_hal_msp.c **** /**
 373:Core/Src/stm32f3xx_hal_msp.c **** * @brief TIM_PWM MSP De-Initialization
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 43


 374:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 375:Core/Src/stm32f3xx_hal_msp.c **** * @param htim_pwm: TIM_PWM handle pointer
 376:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 377:Core/Src/stm32f3xx_hal_msp.c **** */
 378:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef* htim_pwm)
 379:Core/Src/stm32f3xx_hal_msp.c **** {
 923              		.loc 1 379 1 is_stmt 1 view -0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              		@ link register save eliminated.
 380:Core/Src/stm32f3xx_hal_msp.c ****   if(htim_pwm->Instance==TIM3)
 928              		.loc 1 380 3 view .LVU221
 929              		.loc 1 380 14 is_stmt 0 view .LVU222
 930 0000 0268     		ldr	r2, [r0]
 931              		.loc 1 380 5 view .LVU223
 932 0002 054B     		ldr	r3, .L72
 933 0004 9A42     		cmp	r2, r3
 934 0006 00D0     		beq	.L71
 935              	.L69:
 381:Core/Src/stm32f3xx_hal_msp.c ****   {
 382:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 383:Core/Src/stm32f3xx_hal_msp.c **** 
 384:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 385:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 386:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 387:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 388:Core/Src/stm32f3xx_hal_msp.c **** 
 389:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 390:Core/Src/stm32f3xx_hal_msp.c ****   }
 391:Core/Src/stm32f3xx_hal_msp.c **** 
 392:Core/Src/stm32f3xx_hal_msp.c **** }
 936              		.loc 1 392 1 view .LVU224
 937 0008 7047     		bx	lr
 938              	.L71:
 386:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 939              		.loc 1 386 5 is_stmt 1 view .LVU225
 940 000a 044A     		ldr	r2, .L72+4
 941 000c D369     		ldr	r3, [r2, #28]
 942 000e 23F00203 		bic	r3, r3, #2
 943 0012 D361     		str	r3, [r2, #28]
 944              		.loc 1 392 1 is_stmt 0 view .LVU226
 945 0014 F8E7     		b	.L69
 946              	.L73:
 947 0016 00BF     		.align	2
 948              	.L72:
 949 0018 00040040 		.word	1073742848
 950 001c 00100240 		.word	1073876992
 951              		.cfi_endproc
 952              	.LFE143:
 954              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 955              		.align	1
 956              		.global	HAL_TIM_Base_MspDeInit
 957              		.syntax unified
 958              		.thumb
 959              		.thumb_func
 961              	HAL_TIM_Base_MspDeInit:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 44


 962              	.LVL55:
 963              	.LFB144:
 393:Core/Src/stm32f3xx_hal_msp.c **** 
 394:Core/Src/stm32f3xx_hal_msp.c **** /**
 395:Core/Src/stm32f3xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 396:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 397:Core/Src/stm32f3xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 398:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 399:Core/Src/stm32f3xx_hal_msp.c **** */
 400:Core/Src/stm32f3xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 401:Core/Src/stm32f3xx_hal_msp.c **** {
 964              		.loc 1 401 1 is_stmt 1 view -0
 965              		.cfi_startproc
 966              		@ args = 0, pretend = 0, frame = 0
 967              		@ frame_needed = 0, uses_anonymous_args = 0
 968              		.loc 1 401 1 is_stmt 0 view .LVU228
 969 0000 08B5     		push	{r3, lr}
 970              	.LCFI24:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 3, -8
 973              		.cfi_offset 14, -4
 402:Core/Src/stm32f3xx_hal_msp.c ****   if(htim_base->Instance==TIM16)
 974              		.loc 1 402 3 is_stmt 1 view .LVU229
 975              		.loc 1 402 15 is_stmt 0 view .LVU230
 976 0002 0368     		ldr	r3, [r0]
 977              		.loc 1 402 5 view .LVU231
 978 0004 0D4A     		ldr	r2, .L80
 979 0006 9342     		cmp	r3, r2
 980 0008 03D0     		beq	.L78
 403:Core/Src/stm32f3xx_hal_msp.c ****   {
 404:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 0 */
 405:Core/Src/stm32f3xx_hal_msp.c **** 
 406:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM16_MspDeInit 0 */
 407:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 408:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM16_CLK_DISABLE();
 409:Core/Src/stm32f3xx_hal_msp.c **** 
 410:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM16 interrupt DeInit */
 411:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn);
 412:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 413:Core/Src/stm32f3xx_hal_msp.c **** 
 414:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM16_MspDeInit 1 */
 415:Core/Src/stm32f3xx_hal_msp.c ****   }
 416:Core/Src/stm32f3xx_hal_msp.c ****   else if(htim_base->Instance==TIM17)
 981              		.loc 1 416 8 is_stmt 1 view .LVU232
 982              		.loc 1 416 10 is_stmt 0 view .LVU233
 983 000a 0D4A     		ldr	r2, .L80+4
 984 000c 9342     		cmp	r3, r2
 985 000e 0AD0     		beq	.L79
 986              	.LVL56:
 987              	.L74:
 417:Core/Src/stm32f3xx_hal_msp.c ****   {
 418:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 0 */
 419:Core/Src/stm32f3xx_hal_msp.c **** 
 420:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM17_MspDeInit 0 */
 421:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 422:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_TIM17_CLK_DISABLE();
 423:Core/Src/stm32f3xx_hal_msp.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 45


 424:Core/Src/stm32f3xx_hal_msp.c ****     /* TIM17 interrupt DeInit */
 425:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 426:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 1 */
 427:Core/Src/stm32f3xx_hal_msp.c **** 
 428:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END TIM17_MspDeInit 1 */
 429:Core/Src/stm32f3xx_hal_msp.c ****   }
 430:Core/Src/stm32f3xx_hal_msp.c **** 
 431:Core/Src/stm32f3xx_hal_msp.c **** }
 988              		.loc 1 431 1 view .LVU234
 989 0010 08BD     		pop	{r3, pc}
 990              	.LVL57:
 991              	.L78:
 408:Core/Src/stm32f3xx_hal_msp.c **** 
 992              		.loc 1 408 5 is_stmt 1 view .LVU235
 993 0012 02F54C42 		add	r2, r2, #52224
 994 0016 9369     		ldr	r3, [r2, #24]
 995 0018 23F40033 		bic	r3, r3, #131072
 996 001c 9361     		str	r3, [r2, #24]
 411:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 997              		.loc 1 411 5 view .LVU236
 998 001e 1920     		movs	r0, #25
 999              	.LVL58:
 411:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 1000              		.loc 1 411 5 is_stmt 0 view .LVU237
 1001 0020 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1002              	.LVL59:
 1003 0024 F4E7     		b	.L74
 1004              	.LVL60:
 1005              	.L79:
 422:Core/Src/stm32f3xx_hal_msp.c **** 
 1006              		.loc 1 422 5 is_stmt 1 view .LVU238
 1007 0026 02F54842 		add	r2, r2, #51200
 1008 002a 9369     		ldr	r3, [r2, #24]
 1009 002c 23F48023 		bic	r3, r3, #262144
 1010 0030 9361     		str	r3, [r2, #24]
 425:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 1 */
 1011              		.loc 1 425 5 view .LVU239
 1012 0032 1A20     		movs	r0, #26
 1013              	.LVL61:
 425:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN TIM17_MspDeInit 1 */
 1014              		.loc 1 425 5 is_stmt 0 view .LVU240
 1015 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1016              	.LVL62:
 1017              		.loc 1 431 1 view .LVU241
 1018 0038 EAE7     		b	.L74
 1019              	.L81:
 1020 003a 00BF     		.align	2
 1021              	.L80:
 1022 003c 00440140 		.word	1073824768
 1023 0040 00480140 		.word	1073825792
 1024              		.cfi_endproc
 1025              	.LFE144:
 1027              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 1028              		.align	1
 1029              		.global	HAL_UART_MspInit
 1030              		.syntax unified
 1031              		.thumb
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 46


 1032              		.thumb_func
 1034              	HAL_UART_MspInit:
 1035              	.LVL63:
 1036              	.LFB145:
 432:Core/Src/stm32f3xx_hal_msp.c **** 
 433:Core/Src/stm32f3xx_hal_msp.c **** /**
 434:Core/Src/stm32f3xx_hal_msp.c **** * @brief UART MSP Initialization
 435:Core/Src/stm32f3xx_hal_msp.c **** * This function configures the hardware resources used in this example
 436:Core/Src/stm32f3xx_hal_msp.c **** * @param huart: UART handle pointer
 437:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 438:Core/Src/stm32f3xx_hal_msp.c **** */
 439:Core/Src/stm32f3xx_hal_msp.c **** void HAL_UART_MspInit(UART_HandleTypeDef* huart)
 440:Core/Src/stm32f3xx_hal_msp.c **** {
 1037              		.loc 1 440 1 is_stmt 1 view -0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 48
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              		.loc 1 440 1 is_stmt 0 view .LVU243
 1042 0000 10B5     		push	{r4, lr}
 1043              	.LCFI25:
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 4, -8
 1046              		.cfi_offset 14, -4
 1047 0002 8CB0     		sub	sp, sp, #48
 1048              	.LCFI26:
 1049              		.cfi_def_cfa_offset 56
 441:Core/Src/stm32f3xx_hal_msp.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1050              		.loc 1 441 3 is_stmt 1 view .LVU244
 1051              		.loc 1 441 20 is_stmt 0 view .LVU245
 1052 0004 0023     		movs	r3, #0
 1053 0006 0793     		str	r3, [sp, #28]
 1054 0008 0893     		str	r3, [sp, #32]
 1055 000a 0993     		str	r3, [sp, #36]
 1056 000c 0A93     		str	r3, [sp, #40]
 1057 000e 0B93     		str	r3, [sp, #44]
 442:Core/Src/stm32f3xx_hal_msp.c ****   if(huart->Instance==USART1)
 1058              		.loc 1 442 3 is_stmt 1 view .LVU246
 1059              		.loc 1 442 11 is_stmt 0 view .LVU247
 1060 0010 0368     		ldr	r3, [r0]
 1061              		.loc 1 442 5 view .LVU248
 1062 0012 4C4A     		ldr	r2, .L92
 1063 0014 9342     		cmp	r3, r2
 1064 0016 08D0     		beq	.L88
 1065 0018 0446     		mov	r4, r0
 443:Core/Src/stm32f3xx_hal_msp.c ****   {
 444:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
 445:Core/Src/stm32f3xx_hal_msp.c **** 
 446:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 0 */
 447:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 448:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_ENABLE();
 449:Core/Src/stm32f3xx_hal_msp.c **** 
 450:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 451:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 452:Core/Src/stm32f3xx_hal_msp.c ****     PA9     ------> USART1_TX
 453:Core/Src/stm32f3xx_hal_msp.c ****     PA10     ------> USART1_RX
 454:Core/Src/stm32f3xx_hal_msp.c ****     */
 455:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 47


 456:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 457:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 458:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 459:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 460:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 461:Core/Src/stm32f3xx_hal_msp.c **** 
 462:Core/Src/stm32f3xx_hal_msp.c ****     /* USART1 interrupt Init */
 463:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 3, 0);
 464:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 465:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 466:Core/Src/stm32f3xx_hal_msp.c **** 
 467:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART1_MspInit 1 */
 468:Core/Src/stm32f3xx_hal_msp.c ****   }
 469:Core/Src/stm32f3xx_hal_msp.c ****   else if(huart->Instance==USART2)
 1066              		.loc 1 469 8 is_stmt 1 view .LVU249
 1067              		.loc 1 469 10 is_stmt 0 view .LVU250
 1068 001a 4B4A     		ldr	r2, .L92+4
 1069 001c 9342     		cmp	r3, r2
 1070 001e 30D0     		beq	.L89
 470:Core/Src/stm32f3xx_hal_msp.c ****   {
 471:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 0 */
 472:Core/Src/stm32f3xx_hal_msp.c **** 
 473:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 0 */
 474:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 475:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_ENABLE();
 476:Core/Src/stm32f3xx_hal_msp.c **** 
 477:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 478:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 479:Core/Src/stm32f3xx_hal_msp.c ****     PA2     ------> USART2_TX
 480:Core/Src/stm32f3xx_hal_msp.c ****     PA3     ------> USART2_RX
 481:Core/Src/stm32f3xx_hal_msp.c ****     */
 482:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 483:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 484:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 485:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 486:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 487:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 488:Core/Src/stm32f3xx_hal_msp.c **** 
 489:Core/Src/stm32f3xx_hal_msp.c ****     /* USART2 DMA Init */
 490:Core/Src/stm32f3xx_hal_msp.c ****     /* USART2_RX Init */
 491:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Instance = DMA1_Channel6;
 492:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 493:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 494:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 495:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 496:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 497:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 498:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 499:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 500:Core/Src/stm32f3xx_hal_msp.c ****     {
 501:Core/Src/stm32f3xx_hal_msp.c ****       Error_Handler();
 502:Core/Src/stm32f3xx_hal_msp.c ****     }
 503:Core/Src/stm32f3xx_hal_msp.c **** 
 504:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_LINKDMA(huart,hdmarx,hdma_usart2_rx);
 505:Core/Src/stm32f3xx_hal_msp.c **** 
 506:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspInit 1 */
 507:Core/Src/stm32f3xx_hal_msp.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 48


 508:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART2_MspInit 1 */
 509:Core/Src/stm32f3xx_hal_msp.c ****   }
 510:Core/Src/stm32f3xx_hal_msp.c ****   else if(huart->Instance==USART3)
 1071              		.loc 1 510 8 is_stmt 1 view .LVU251
 1072              		.loc 1 510 10 is_stmt 0 view .LVU252
 1073 0020 4A4A     		ldr	r2, .L92+8
 1074 0022 9342     		cmp	r3, r2
 1075 0024 64D0     		beq	.L90
 1076              	.LVL64:
 1077              	.L82:
 511:Core/Src/stm32f3xx_hal_msp.c ****   {
 512:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 0 */
 513:Core/Src/stm32f3xx_hal_msp.c **** 
 514:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 0 */
 515:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock enable */
 516:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_ENABLE();
 517:Core/Src/stm32f3xx_hal_msp.c **** 
 518:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 519:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 520:Core/Src/stm32f3xx_hal_msp.c ****     PB10     ------> USART3_TX
 521:Core/Src/stm32f3xx_hal_msp.c ****     PB11     ------> USART3_RX
 522:Core/Src/stm32f3xx_hal_msp.c ****     */
 523:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 524:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 525:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 526:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 527:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 528:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 529:Core/Src/stm32f3xx_hal_msp.c **** 
 530:Core/Src/stm32f3xx_hal_msp.c ****     /* USART3 interrupt Init */
 531:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_SetPriority(USART3_IRQn, 4, 0);
 532:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 533:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 534:Core/Src/stm32f3xx_hal_msp.c **** 
 535:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART3_MspInit 1 */
 536:Core/Src/stm32f3xx_hal_msp.c ****   }
 537:Core/Src/stm32f3xx_hal_msp.c **** 
 538:Core/Src/stm32f3xx_hal_msp.c **** }
 1078              		.loc 1 538 1 view .LVU253
 1079 0026 0CB0     		add	sp, sp, #48
 1080              	.LCFI27:
 1081              		.cfi_remember_state
 1082              		.cfi_def_cfa_offset 8
 1083              		@ sp needed
 1084 0028 10BD     		pop	{r4, pc}
 1085              	.LVL65:
 1086              	.L88:
 1087              	.LCFI28:
 1088              		.cfi_restore_state
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1089              		.loc 1 448 5 is_stmt 1 view .LVU254
 1090              	.LBB20:
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1091              		.loc 1 448 5 view .LVU255
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1092              		.loc 1 448 5 view .LVU256
 1093 002a 494B     		ldr	r3, .L92+12
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 49


 1094 002c 9A69     		ldr	r2, [r3, #24]
 1095 002e 42F48042 		orr	r2, r2, #16384
 1096 0032 9A61     		str	r2, [r3, #24]
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1097              		.loc 1 448 5 view .LVU257
 1098 0034 9A69     		ldr	r2, [r3, #24]
 1099 0036 02F48042 		and	r2, r2, #16384
 1100 003a 0192     		str	r2, [sp, #4]
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1101              		.loc 1 448 5 view .LVU258
 1102 003c 019A     		ldr	r2, [sp, #4]
 1103              	.LBE20:
 448:Core/Src/stm32f3xx_hal_msp.c **** 
 1104              		.loc 1 448 5 view .LVU259
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1105              		.loc 1 450 5 view .LVU260
 1106              	.LBB21:
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1107              		.loc 1 450 5 view .LVU261
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1108              		.loc 1 450 5 view .LVU262
 1109 003e 5A69     		ldr	r2, [r3, #20]
 1110 0040 42F40032 		orr	r2, r2, #131072
 1111 0044 5A61     		str	r2, [r3, #20]
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1112              		.loc 1 450 5 view .LVU263
 1113 0046 5B69     		ldr	r3, [r3, #20]
 1114 0048 03F40033 		and	r3, r3, #131072
 1115 004c 0293     		str	r3, [sp, #8]
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1116              		.loc 1 450 5 view .LVU264
 1117 004e 029B     		ldr	r3, [sp, #8]
 1118              	.LBE21:
 450:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 1119              		.loc 1 450 5 view .LVU265
 455:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1120              		.loc 1 455 5 view .LVU266
 455:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1121              		.loc 1 455 25 is_stmt 0 view .LVU267
 1122 0050 4FF4C063 		mov	r3, #1536
 1123 0054 0793     		str	r3, [sp, #28]
 456:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 1124              		.loc 1 456 5 is_stmt 1 view .LVU268
 456:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_PULLUP;
 1125              		.loc 1 456 26 is_stmt 0 view .LVU269
 1126 0056 0223     		movs	r3, #2
 1127 0058 0893     		str	r3, [sp, #32]
 457:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1128              		.loc 1 457 5 is_stmt 1 view .LVU270
 457:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1129              		.loc 1 457 26 is_stmt 0 view .LVU271
 1130 005a 0123     		movs	r3, #1
 1131 005c 0993     		str	r3, [sp, #36]
 458:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 1132              		.loc 1 458 5 is_stmt 1 view .LVU272
 458:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 1133              		.loc 1 458 27 is_stmt 0 view .LVU273
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 50


 1134 005e 0324     		movs	r4, #3
 1135 0060 0A94     		str	r4, [sp, #40]
 459:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1136              		.loc 1 459 5 is_stmt 1 view .LVU274
 459:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1137              		.loc 1 459 31 is_stmt 0 view .LVU275
 1138 0062 0723     		movs	r3, #7
 1139 0064 0B93     		str	r3, [sp, #44]
 460:Core/Src/stm32f3xx_hal_msp.c **** 
 1140              		.loc 1 460 5 is_stmt 1 view .LVU276
 1141 0066 07A9     		add	r1, sp, #28
 1142 0068 4FF09040 		mov	r0, #1207959552
 1143              	.LVL66:
 460:Core/Src/stm32f3xx_hal_msp.c **** 
 1144              		.loc 1 460 5 is_stmt 0 view .LVU277
 1145 006c FFF7FEFF 		bl	HAL_GPIO_Init
 1146              	.LVL67:
 463:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 1147              		.loc 1 463 5 is_stmt 1 view .LVU278
 1148 0070 0022     		movs	r2, #0
 1149 0072 2146     		mov	r1, r4
 1150 0074 2520     		movs	r0, #37
 1151 0076 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1152              	.LVL68:
 464:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 1153              		.loc 1 464 5 view .LVU279
 1154 007a 2520     		movs	r0, #37
 1155 007c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1156              	.LVL69:
 1157 0080 D1E7     		b	.L82
 1158              	.LVL70:
 1159              	.L89:
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1160              		.loc 1 475 5 view .LVU280
 1161              	.LBB22:
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1162              		.loc 1 475 5 view .LVU281
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1163              		.loc 1 475 5 view .LVU282
 1164 0082 334B     		ldr	r3, .L92+12
 1165 0084 DA69     		ldr	r2, [r3, #28]
 1166 0086 42F40032 		orr	r2, r2, #131072
 1167 008a DA61     		str	r2, [r3, #28]
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1168              		.loc 1 475 5 view .LVU283
 1169 008c DA69     		ldr	r2, [r3, #28]
 1170 008e 02F40032 		and	r2, r2, #131072
 1171 0092 0392     		str	r2, [sp, #12]
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1172              		.loc 1 475 5 view .LVU284
 1173 0094 039A     		ldr	r2, [sp, #12]
 1174              	.LBE22:
 475:Core/Src/stm32f3xx_hal_msp.c **** 
 1175              		.loc 1 475 5 view .LVU285
 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1176              		.loc 1 477 5 view .LVU286
 1177              	.LBB23:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 51


 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1178              		.loc 1 477 5 view .LVU287
 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1179              		.loc 1 477 5 view .LVU288
 1180 0096 5A69     		ldr	r2, [r3, #20]
 1181 0098 42F40032 		orr	r2, r2, #131072
 1182 009c 5A61     		str	r2, [r3, #20]
 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1183              		.loc 1 477 5 view .LVU289
 1184 009e 5B69     		ldr	r3, [r3, #20]
 1185 00a0 03F40033 		and	r3, r3, #131072
 1186 00a4 0493     		str	r3, [sp, #16]
 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1187              		.loc 1 477 5 view .LVU290
 1188 00a6 049B     		ldr	r3, [sp, #16]
 1189              	.LBE23:
 477:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 1190              		.loc 1 477 5 view .LVU291
 482:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1191              		.loc 1 482 5 view .LVU292
 482:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1192              		.loc 1 482 25 is_stmt 0 view .LVU293
 1193 00a8 0C23     		movs	r3, #12
 1194 00aa 0793     		str	r3, [sp, #28]
 483:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1195              		.loc 1 483 5 is_stmt 1 view .LVU294
 483:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1196              		.loc 1 483 26 is_stmt 0 view .LVU295
 1197 00ac 0223     		movs	r3, #2
 1198 00ae 0893     		str	r3, [sp, #32]
 484:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1199              		.loc 1 484 5 is_stmt 1 view .LVU296
 485:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 1200              		.loc 1 485 5 view .LVU297
 485:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 1201              		.loc 1 485 27 is_stmt 0 view .LVU298
 1202 00b0 0323     		movs	r3, #3
 1203 00b2 0A93     		str	r3, [sp, #40]
 486:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1204              		.loc 1 486 5 is_stmt 1 view .LVU299
 486:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1205              		.loc 1 486 31 is_stmt 0 view .LVU300
 1206 00b4 0723     		movs	r3, #7
 1207 00b6 0B93     		str	r3, [sp, #44]
 487:Core/Src/stm32f3xx_hal_msp.c **** 
 1208              		.loc 1 487 5 is_stmt 1 view .LVU301
 1209 00b8 07A9     		add	r1, sp, #28
 1210 00ba 4FF09040 		mov	r0, #1207959552
 1211              	.LVL71:
 487:Core/Src/stm32f3xx_hal_msp.c **** 
 1212              		.loc 1 487 5 is_stmt 0 view .LVU302
 1213 00be FFF7FEFF 		bl	HAL_GPIO_Init
 1214              	.LVL72:
 491:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1215              		.loc 1 491 5 is_stmt 1 view .LVU303
 491:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 1216              		.loc 1 491 29 is_stmt 0 view .LVU304
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 52


 1217 00c2 2448     		ldr	r0, .L92+16
 1218 00c4 244B     		ldr	r3, .L92+20
 1219 00c6 0360     		str	r3, [r0]
 492:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 1220              		.loc 1 492 5 is_stmt 1 view .LVU305
 492:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 1221              		.loc 1 492 35 is_stmt 0 view .LVU306
 1222 00c8 0023     		movs	r3, #0
 1223 00ca 4360     		str	r3, [r0, #4]
 493:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 1224              		.loc 1 493 5 is_stmt 1 view .LVU307
 493:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemInc = DMA_MINC_ENABLE;
 1225              		.loc 1 493 35 is_stmt 0 view .LVU308
 1226 00cc 8360     		str	r3, [r0, #8]
 494:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 1227              		.loc 1 494 5 is_stmt 1 view .LVU309
 494:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 1228              		.loc 1 494 32 is_stmt 0 view .LVU310
 1229 00ce 8022     		movs	r2, #128
 1230 00d0 C260     		str	r2, [r0, #12]
 495:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 1231              		.loc 1 495 5 is_stmt 1 view .LVU311
 495:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 1232              		.loc 1 495 45 is_stmt 0 view .LVU312
 1233 00d2 0361     		str	r3, [r0, #16]
 496:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 1234              		.loc 1 496 5 is_stmt 1 view .LVU313
 496:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Mode = DMA_CIRCULAR;
 1235              		.loc 1 496 42 is_stmt 0 view .LVU314
 1236 00d4 4361     		str	r3, [r0, #20]
 497:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 1237              		.loc 1 497 5 is_stmt 1 view .LVU315
 497:Core/Src/stm32f3xx_hal_msp.c ****     hdma_usart2_rx.Init.Priority = DMA_PRIORITY_LOW;
 1238              		.loc 1 497 30 is_stmt 0 view .LVU316
 1239 00d6 2022     		movs	r2, #32
 1240 00d8 8261     		str	r2, [r0, #24]
 498:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 1241              		.loc 1 498 5 is_stmt 1 view .LVU317
 498:Core/Src/stm32f3xx_hal_msp.c ****     if (HAL_DMA_Init(&hdma_usart2_rx) != HAL_OK)
 1242              		.loc 1 498 34 is_stmt 0 view .LVU318
 1243 00da C361     		str	r3, [r0, #28]
 499:Core/Src/stm32f3xx_hal_msp.c ****     {
 1244              		.loc 1 499 5 is_stmt 1 view .LVU319
 499:Core/Src/stm32f3xx_hal_msp.c ****     {
 1245              		.loc 1 499 9 is_stmt 0 view .LVU320
 1246 00dc FFF7FEFF 		bl	HAL_DMA_Init
 1247              	.LVL73:
 499:Core/Src/stm32f3xx_hal_msp.c ****     {
 1248              		.loc 1 499 8 view .LVU321
 1249 00e0 18B9     		cbnz	r0, .L91
 1250              	.L86:
 504:Core/Src/stm32f3xx_hal_msp.c **** 
 1251              		.loc 1 504 5 is_stmt 1 view .LVU322
 504:Core/Src/stm32f3xx_hal_msp.c **** 
 1252              		.loc 1 504 5 view .LVU323
 1253 00e2 1C4B     		ldr	r3, .L92+16
 1254 00e4 2367     		str	r3, [r4, #112]
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 53


 504:Core/Src/stm32f3xx_hal_msp.c **** 
 1255              		.loc 1 504 5 view .LVU324
 1256 00e6 5C62     		str	r4, [r3, #36]
 504:Core/Src/stm32f3xx_hal_msp.c **** 
 1257              		.loc 1 504 5 view .LVU325
 1258 00e8 9DE7     		b	.L82
 1259              	.L91:
 501:Core/Src/stm32f3xx_hal_msp.c ****     }
 1260              		.loc 1 501 7 view .LVU326
 1261 00ea FFF7FEFF 		bl	Error_Handler
 1262              	.LVL74:
 1263 00ee F8E7     		b	.L86
 1264              	.LVL75:
 1265              	.L90:
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1266              		.loc 1 516 5 view .LVU327
 1267              	.LBB24:
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1268              		.loc 1 516 5 view .LVU328
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1269              		.loc 1 516 5 view .LVU329
 1270 00f0 174B     		ldr	r3, .L92+12
 1271 00f2 DA69     		ldr	r2, [r3, #28]
 1272 00f4 42F48022 		orr	r2, r2, #262144
 1273 00f8 DA61     		str	r2, [r3, #28]
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1274              		.loc 1 516 5 view .LVU330
 1275 00fa DA69     		ldr	r2, [r3, #28]
 1276 00fc 02F48022 		and	r2, r2, #262144
 1277 0100 0592     		str	r2, [sp, #20]
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1278              		.loc 1 516 5 view .LVU331
 1279 0102 059A     		ldr	r2, [sp, #20]
 1280              	.LBE24:
 516:Core/Src/stm32f3xx_hal_msp.c **** 
 1281              		.loc 1 516 5 view .LVU332
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1282              		.loc 1 518 5 view .LVU333
 1283              	.LBB25:
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1284              		.loc 1 518 5 view .LVU334
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1285              		.loc 1 518 5 view .LVU335
 1286 0104 5A69     		ldr	r2, [r3, #20]
 1287 0106 42F48022 		orr	r2, r2, #262144
 1288 010a 5A61     		str	r2, [r3, #20]
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1289              		.loc 1 518 5 view .LVU336
 1290 010c 5B69     		ldr	r3, [r3, #20]
 1291 010e 03F48023 		and	r3, r3, #262144
 1292 0112 0693     		str	r3, [sp, #24]
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1293              		.loc 1 518 5 view .LVU337
 1294 0114 069B     		ldr	r3, [sp, #24]
 1295              	.LBE25:
 518:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 1296              		.loc 1 518 5 view .LVU338
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 54


 523:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1297              		.loc 1 523 5 view .LVU339
 523:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1298              		.loc 1 523 25 is_stmt 0 view .LVU340
 1299 0116 4FF44063 		mov	r3, #3072
 1300 011a 0793     		str	r3, [sp, #28]
 524:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1301              		.loc 1 524 5 is_stmt 1 view .LVU341
 524:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1302              		.loc 1 524 26 is_stmt 0 view .LVU342
 1303 011c 0223     		movs	r3, #2
 1304 011e 0893     		str	r3, [sp, #32]
 525:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 1305              		.loc 1 525 5 is_stmt 1 view .LVU343
 526:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 1306              		.loc 1 526 5 view .LVU344
 526:Core/Src/stm32f3xx_hal_msp.c ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 1307              		.loc 1 526 27 is_stmt 0 view .LVU345
 1308 0120 0323     		movs	r3, #3
 1309 0122 0A93     		str	r3, [sp, #40]
 527:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1310              		.loc 1 527 5 is_stmt 1 view .LVU346
 527:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1311              		.loc 1 527 31 is_stmt 0 view .LVU347
 1312 0124 0723     		movs	r3, #7
 1313 0126 0B93     		str	r3, [sp, #44]
 528:Core/Src/stm32f3xx_hal_msp.c **** 
 1314              		.loc 1 528 5 is_stmt 1 view .LVU348
 1315 0128 07A9     		add	r1, sp, #28
 1316 012a 0C48     		ldr	r0, .L92+24
 1317              	.LVL76:
 528:Core/Src/stm32f3xx_hal_msp.c **** 
 1318              		.loc 1 528 5 is_stmt 0 view .LVU349
 1319 012c FFF7FEFF 		bl	HAL_GPIO_Init
 1320              	.LVL77:
 531:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(USART3_IRQn);
 1321              		.loc 1 531 5 is_stmt 1 view .LVU350
 1322 0130 0022     		movs	r2, #0
 1323 0132 0421     		movs	r1, #4
 1324 0134 2720     		movs	r0, #39
 1325 0136 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1326              	.LVL78:
 532:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspInit 1 */
 1327              		.loc 1 532 5 view .LVU351
 1328 013a 2720     		movs	r0, #39
 1329 013c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1330              	.LVL79:
 1331              		.loc 1 538 1 is_stmt 0 view .LVU352
 1332 0140 71E7     		b	.L82
 1333              	.L93:
 1334 0142 00BF     		.align	2
 1335              	.L92:
 1336 0144 00380140 		.word	1073821696
 1337 0148 00440040 		.word	1073759232
 1338 014c 00480040 		.word	1073760256
 1339 0150 00100240 		.word	1073876992
 1340 0154 00000000 		.word	hdma_usart2_rx
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 55


 1341 0158 6C000240 		.word	1073873004
 1342 015c 00040048 		.word	1207960576
 1343              		.cfi_endproc
 1344              	.LFE145:
 1346              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 1347              		.align	1
 1348              		.global	HAL_UART_MspDeInit
 1349              		.syntax unified
 1350              		.thumb
 1351              		.thumb_func
 1353              	HAL_UART_MspDeInit:
 1354              	.LVL80:
 1355              	.LFB146:
 539:Core/Src/stm32f3xx_hal_msp.c **** 
 540:Core/Src/stm32f3xx_hal_msp.c **** /**
 541:Core/Src/stm32f3xx_hal_msp.c **** * @brief UART MSP De-Initialization
 542:Core/Src/stm32f3xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 543:Core/Src/stm32f3xx_hal_msp.c **** * @param huart: UART handle pointer
 544:Core/Src/stm32f3xx_hal_msp.c **** * @retval None
 545:Core/Src/stm32f3xx_hal_msp.c **** */
 546:Core/Src/stm32f3xx_hal_msp.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
 547:Core/Src/stm32f3xx_hal_msp.c **** {
 1356              		.loc 1 547 1 is_stmt 1 view -0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 0
 1359              		@ frame_needed = 0, uses_anonymous_args = 0
 1360              		.loc 1 547 1 is_stmt 0 view .LVU354
 1361 0000 10B5     		push	{r4, lr}
 1362              	.LCFI29:
 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 4, -8
 1365              		.cfi_offset 14, -4
 548:Core/Src/stm32f3xx_hal_msp.c ****   if(huart->Instance==USART1)
 1366              		.loc 1 548 3 is_stmt 1 view .LVU355
 1367              		.loc 1 548 11 is_stmt 0 view .LVU356
 1368 0002 0368     		ldr	r3, [r0]
 1369              		.loc 1 548 5 view .LVU357
 1370 0004 1C4A     		ldr	r2, .L102
 1371 0006 9342     		cmp	r3, r2
 1372 0008 07D0     		beq	.L99
 1373 000a 0446     		mov	r4, r0
 549:Core/Src/stm32f3xx_hal_msp.c ****   {
 550:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 551:Core/Src/stm32f3xx_hal_msp.c **** 
 552:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 0 */
 553:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 554:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 555:Core/Src/stm32f3xx_hal_msp.c **** 
 556:Core/Src/stm32f3xx_hal_msp.c ****     /**USART1 GPIO Configuration
 557:Core/Src/stm32f3xx_hal_msp.c ****     PA9     ------> USART1_TX
 558:Core/Src/stm32f3xx_hal_msp.c ****     PA10     ------> USART1_RX
 559:Core/Src/stm32f3xx_hal_msp.c ****     */
 560:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
 561:Core/Src/stm32f3xx_hal_msp.c **** 
 562:Core/Src/stm32f3xx_hal_msp.c ****     /* USART1 interrupt DeInit */
 563:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 564:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 56


 565:Core/Src/stm32f3xx_hal_msp.c **** 
 566:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART1_MspDeInit 1 */
 567:Core/Src/stm32f3xx_hal_msp.c ****   }
 568:Core/Src/stm32f3xx_hal_msp.c ****   else if(huart->Instance==USART2)
 1374              		.loc 1 568 8 is_stmt 1 view .LVU358
 1375              		.loc 1 568 10 is_stmt 0 view .LVU359
 1376 000c 1B4A     		ldr	r2, .L102+4
 1377 000e 9342     		cmp	r3, r2
 1378 0010 13D0     		beq	.L100
 569:Core/Src/stm32f3xx_hal_msp.c ****   {
 570:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 571:Core/Src/stm32f3xx_hal_msp.c **** 
 572:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 0 */
 573:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 574:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART2_CLK_DISABLE();
 575:Core/Src/stm32f3xx_hal_msp.c **** 
 576:Core/Src/stm32f3xx_hal_msp.c ****     /**USART2 GPIO Configuration
 577:Core/Src/stm32f3xx_hal_msp.c ****     PA2     ------> USART2_TX
 578:Core/Src/stm32f3xx_hal_msp.c ****     PA3     ------> USART2_RX
 579:Core/Src/stm32f3xx_hal_msp.c ****     */
 580:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 581:Core/Src/stm32f3xx_hal_msp.c **** 
 582:Core/Src/stm32f3xx_hal_msp.c ****     /* USART2 DMA DeInit */
 583:Core/Src/stm32f3xx_hal_msp.c ****     HAL_DMA_DeInit(huart->hdmarx);
 584:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 585:Core/Src/stm32f3xx_hal_msp.c **** 
 586:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART2_MspDeInit 1 */
 587:Core/Src/stm32f3xx_hal_msp.c ****   }
 588:Core/Src/stm32f3xx_hal_msp.c ****   else if(huart->Instance==USART3)
 1379              		.loc 1 588 8 is_stmt 1 view .LVU360
 1380              		.loc 1 588 10 is_stmt 0 view .LVU361
 1381 0012 1B4A     		ldr	r2, .L102+8
 1382 0014 9342     		cmp	r3, r2
 1383 0016 1FD0     		beq	.L101
 1384              	.LVL81:
 1385              	.L94:
 589:Core/Src/stm32f3xx_hal_msp.c ****   {
 590:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 0 */
 591:Core/Src/stm32f3xx_hal_msp.c **** 
 592:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 0 */
 593:Core/Src/stm32f3xx_hal_msp.c ****     /* Peripheral clock disable */
 594:Core/Src/stm32f3xx_hal_msp.c ****     __HAL_RCC_USART3_CLK_DISABLE();
 595:Core/Src/stm32f3xx_hal_msp.c **** 
 596:Core/Src/stm32f3xx_hal_msp.c ****     /**USART3 GPIO Configuration
 597:Core/Src/stm32f3xx_hal_msp.c ****     PB10     ------> USART3_TX
 598:Core/Src/stm32f3xx_hal_msp.c ****     PB11     ------> USART3_RX
 599:Core/Src/stm32f3xx_hal_msp.c ****     */
 600:Core/Src/stm32f3xx_hal_msp.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10|GPIO_PIN_11);
 601:Core/Src/stm32f3xx_hal_msp.c **** 
 602:Core/Src/stm32f3xx_hal_msp.c ****     /* USART3 interrupt DeInit */
 603:Core/Src/stm32f3xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(USART3_IRQn);
 604:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 605:Core/Src/stm32f3xx_hal_msp.c **** 
 606:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE END USART3_MspDeInit 1 */
 607:Core/Src/stm32f3xx_hal_msp.c ****   }
 608:Core/Src/stm32f3xx_hal_msp.c **** 
 609:Core/Src/stm32f3xx_hal_msp.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 57


 1386              		.loc 1 609 1 view .LVU362
 1387 0018 10BD     		pop	{r4, pc}
 1388              	.LVL82:
 1389              	.L99:
 554:Core/Src/stm32f3xx_hal_msp.c **** 
 1390              		.loc 1 554 5 is_stmt 1 view .LVU363
 1391 001a 02F55842 		add	r2, r2, #55296
 1392 001e 9369     		ldr	r3, [r2, #24]
 1393 0020 23F48043 		bic	r3, r3, #16384
 1394 0024 9361     		str	r3, [r2, #24]
 560:Core/Src/stm32f3xx_hal_msp.c **** 
 1395              		.loc 1 560 5 view .LVU364
 1396 0026 4FF4C061 		mov	r1, #1536
 1397 002a 4FF09040 		mov	r0, #1207959552
 1398              	.LVL83:
 560:Core/Src/stm32f3xx_hal_msp.c **** 
 1399              		.loc 1 560 5 is_stmt 0 view .LVU365
 1400 002e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1401              	.LVL84:
 563:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 1402              		.loc 1 563 5 is_stmt 1 view .LVU366
 1403 0032 2520     		movs	r0, #37
 1404 0034 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1405              	.LVL85:
 1406 0038 EEE7     		b	.L94
 1407              	.LVL86:
 1408              	.L100:
 574:Core/Src/stm32f3xx_hal_msp.c **** 
 1409              		.loc 1 574 5 view .LVU367
 1410 003a 02F5E632 		add	r2, r2, #117760
 1411 003e D369     		ldr	r3, [r2, #28]
 1412 0040 23F40033 		bic	r3, r3, #131072
 1413 0044 D361     		str	r3, [r2, #28]
 580:Core/Src/stm32f3xx_hal_msp.c **** 
 1414              		.loc 1 580 5 view .LVU368
 1415 0046 0C21     		movs	r1, #12
 1416 0048 4FF09040 		mov	r0, #1207959552
 1417              	.LVL87:
 580:Core/Src/stm32f3xx_hal_msp.c **** 
 1418              		.loc 1 580 5 is_stmt 0 view .LVU369
 1419 004c FFF7FEFF 		bl	HAL_GPIO_DeInit
 1420              	.LVL88:
 583:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 1421              		.loc 1 583 5 is_stmt 1 view .LVU370
 1422 0050 206F     		ldr	r0, [r4, #112]
 1423 0052 FFF7FEFF 		bl	HAL_DMA_DeInit
 1424              	.LVL89:
 1425 0056 DFE7     		b	.L94
 1426              	.LVL90:
 1427              	.L101:
 594:Core/Src/stm32f3xx_hal_msp.c **** 
 1428              		.loc 1 594 5 view .LVU371
 1429 0058 02F5E432 		add	r2, r2, #116736
 1430 005c D369     		ldr	r3, [r2, #28]
 1431 005e 23F48023 		bic	r3, r3, #262144
 1432 0062 D361     		str	r3, [r2, #28]
 600:Core/Src/stm32f3xx_hal_msp.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 58


 1433              		.loc 1 600 5 view .LVU372
 1434 0064 4FF44061 		mov	r1, #3072
 1435 0068 0648     		ldr	r0, .L102+12
 1436              	.LVL91:
 600:Core/Src/stm32f3xx_hal_msp.c **** 
 1437              		.loc 1 600 5 is_stmt 0 view .LVU373
 1438 006a FFF7FEFF 		bl	HAL_GPIO_DeInit
 1439              	.LVL92:
 603:Core/Src/stm32f3xx_hal_msp.c ****   /* USER CODE BEGIN USART3_MspDeInit 1 */
 1440              		.loc 1 603 5 is_stmt 1 view .LVU374
 1441 006e 2720     		movs	r0, #39
 1442 0070 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1443              	.LVL93:
 1444              		.loc 1 609 1 is_stmt 0 view .LVU375
 1445 0074 D0E7     		b	.L94
 1446              	.L103:
 1447 0076 00BF     		.align	2
 1448              	.L102:
 1449 0078 00380140 		.word	1073821696
 1450 007c 00440040 		.word	1073759232
 1451 0080 00480040 		.word	1073760256
 1452 0084 00040048 		.word	1207960576
 1453              		.cfi_endproc
 1454              	.LFE146:
 1456              		.text
 1457              	.Letext0:
 1458              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1459              		.file 4 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1460              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 1461              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1462              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1463              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1464              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1465              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1466              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1467              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 1468              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1469              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1470              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1471              		.file 16 "Core/Inc/main.h"
 1472              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_msp.c
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:20     .text.HAL_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:26     .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:77     .text.HAL_MspInit:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:82     .text.HAL_ADC_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:88     .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:246    .text.HAL_ADC_MspInit:0000009c $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:254    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:260    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:310    .text.HAL_ADC_MspDeInit:00000030 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:316    .text.HAL_RTC_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:322    .text.HAL_RTC_MspInit:00000000 HAL_RTC_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:392    .text.HAL_RTC_MspInit:00000034 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:398    .text.HAL_RTC_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:404    .text.HAL_RTC_MspDeInit:00000000 HAL_RTC_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:467    .text.HAL_RTC_MspDeInit:0000002c $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:473    .text.HAL_SPI_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:479    .text.HAL_SPI_MspInit:00000000 HAL_SPI_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:582    .text.HAL_SPI_MspInit:00000064 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:588    .text.HAL_SPI_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:594    .text.HAL_SPI_MspDeInit:00000000 HAL_SPI_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:637    .text.HAL_SPI_MspDeInit:00000024 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:644    .text.HAL_TIM_PWM_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:650    .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:696    .text.HAL_TIM_PWM_MspInit:00000028 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:701    .text.HAL_TIM_Base_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:707    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:811    .text.HAL_TIM_Base_MspInit:00000064 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:818    .text.HAL_TIM_MspPostInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:824    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:908    .text.HAL_TIM_MspPostInit:00000048 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:914    .text.HAL_TIM_PWM_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:920    .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:949    .text.HAL_TIM_PWM_MspDeInit:00000018 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:955    .text.HAL_TIM_Base_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:961    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1022   .text.HAL_TIM_Base_MspDeInit:0000003c $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1028   .text.HAL_UART_MspInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1034   .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1336   .text.HAL_UART_MspInit:00000144 $d
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1347   .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1353   .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\jisu8\AppData\Local\Temp\ccj6IZH4.s:1449   .text.HAL_UART_MspDeInit:00000078 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
Error_Handler
hdma_adc2
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
hdma_usart2_rx
