ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB133:
  28              		.file 1 "Core/Src/stm32f3xx_it.c"
   1:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f3xx_it.c **** /**
   3:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Core/Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f3xx_it.c ****   * @attention
   8:Core/Src/stm32f3xx_it.c ****   *
   9:Core/Src/stm32f3xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f3xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f3xx_it.c ****   *
  12:Core/Src/stm32f3xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f3xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f3xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f3xx_it.c ****   *
  16:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f3xx_it.c ****   */
  18:Core/Src/stm32f3xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f3xx_it.c **** 
  20:Core/Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f3xx_it.c **** #include "main.h"
  22:Core/Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  23:Core/Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f3xx_it.c **** 
  27:Core/Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f3xx_it.c **** 
  30:Core/Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 2


  31:Core/Src/stm32f3xx_it.c **** 
  32:Core/Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f3xx_it.c **** 
  35:Core/Src/stm32f3xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f3xx_it.c **** 
  37:Core/Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f3xx_it.c **** 
  40:Core/Src/stm32f3xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f3xx_it.c **** 
  42:Core/Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f3xx_it.c **** 
  45:Core/Src/stm32f3xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f3xx_it.c **** 
  47:Core/Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f3xx_it.c **** 
  50:Core/Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f3xx_it.c **** 
  52:Core/Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f3xx_it.c **** 
  55:Core/Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f3xx_it.c **** 
  57:Core/Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  59:Core/Src/stm32f3xx_it.c **** 
  60:Core/Src/stm32f3xx_it.c **** /* USER CODE END EV */
  61:Core/Src/stm32f3xx_it.c **** 
  62:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  63:Core/Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  64:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f3xx_it.c **** /**
  66:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  67:Core/Src/stm32f3xx_it.c ****   */
  68:Core/Src/stm32f3xx_it.c **** void NMI_Handler(void)
  69:Core/Src/stm32f3xx_it.c **** {
  29              		.loc 1 69 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
  39              	.L2:
  70:Core/Src/stm32f3xx_it.c ****     while (1)
  40              		.loc 1 70 5 discriminator 1 view .LVU1
  71:Core/Src/stm32f3xx_it.c ****     {
  72:Core/Src/stm32f3xx_it.c ****         HAL_NVIC_SystemReset();
  41              		.loc 1 72 9 discriminator 1 view .LVU2
  42 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
  43              	.LVL0:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 3


  70:Core/Src/stm32f3xx_it.c ****     while (1)
  44              		.loc 1 70 11 discriminator 1 view .LVU3
  45 0006 FCE7     		b	.L2
  46              		.cfi_endproc
  47              	.LFE133:
  49              		.section	.text.HardFault_Handler,"ax",%progbits
  50              		.align	1
  51              		.global	HardFault_Handler
  52              		.syntax unified
  53              		.thumb
  54              		.thumb_func
  56              	HardFault_Handler:
  57              	.LFB134:
  73:Core/Src/stm32f3xx_it.c ****     }
  74:Core/Src/stm32f3xx_it.c **** }
  75:Core/Src/stm32f3xx_it.c **** 
  76:Core/Src/stm32f3xx_it.c **** /**
  77:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  78:Core/Src/stm32f3xx_it.c ****   */
  79:Core/Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  80:Core/Src/stm32f3xx_it.c **** {
  58              		.loc 1 80 1 view -0
  59              		.cfi_startproc
  60              		@ Volatile: function does not return.
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63 0000 08B5     		push	{r3, lr}
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
  68              	.L5:
  81:Core/Src/stm32f3xx_it.c ****     while (1)
  69              		.loc 1 81 5 discriminator 1 view .LVU5
  82:Core/Src/stm32f3xx_it.c ****     {
  83:Core/Src/stm32f3xx_it.c ****         HAL_NVIC_SystemReset();
  70              		.loc 1 83 9 discriminator 1 view .LVU6
  71 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
  72              	.LVL1:
  81:Core/Src/stm32f3xx_it.c ****     while (1)
  73              		.loc 1 81 11 discriminator 1 view .LVU7
  74 0006 FCE7     		b	.L5
  75              		.cfi_endproc
  76              	.LFE134:
  78              		.section	.text.MemManage_Handler,"ax",%progbits
  79              		.align	1
  80              		.global	MemManage_Handler
  81              		.syntax unified
  82              		.thumb
  83              		.thumb_func
  85              	MemManage_Handler:
  86              	.LFB135:
  84:Core/Src/stm32f3xx_it.c ****     }
  85:Core/Src/stm32f3xx_it.c **** }
  86:Core/Src/stm32f3xx_it.c **** 
  87:Core/Src/stm32f3xx_it.c **** /**
  88:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 4


  89:Core/Src/stm32f3xx_it.c ****   */
  90:Core/Src/stm32f3xx_it.c **** void MemManage_Handler(void)
  91:Core/Src/stm32f3xx_it.c **** {
  87              		.loc 1 91 1 view -0
  88              		.cfi_startproc
  89              		@ Volatile: function does not return.
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 08B5     		push	{r3, lr}
  93              	.LCFI2:
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 3, -8
  96              		.cfi_offset 14, -4
  97              	.L8:
  92:Core/Src/stm32f3xx_it.c ****     while (1)
  98              		.loc 1 92 5 discriminator 1 view .LVU9
  93:Core/Src/stm32f3xx_it.c ****     {
  94:Core/Src/stm32f3xx_it.c ****         HAL_NVIC_SystemReset();
  99              		.loc 1 94 9 discriminator 1 view .LVU10
 100 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 101              	.LVL2:
  92:Core/Src/stm32f3xx_it.c ****     while (1)
 102              		.loc 1 92 11 discriminator 1 view .LVU11
 103 0006 FCE7     		b	.L8
 104              		.cfi_endproc
 105              	.LFE135:
 107              		.section	.text.BusFault_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	BusFault_Handler
 110              		.syntax unified
 111              		.thumb
 112              		.thumb_func
 114              	BusFault_Handler:
 115              	.LFB136:
  95:Core/Src/stm32f3xx_it.c ****     }
  96:Core/Src/stm32f3xx_it.c **** }
  97:Core/Src/stm32f3xx_it.c **** 
  98:Core/Src/stm32f3xx_it.c **** /**
  99:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 100:Core/Src/stm32f3xx_it.c ****   */
 101:Core/Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 102:Core/Src/stm32f3xx_it.c **** {
 116              		.loc 1 102 1 view -0
 117              		.cfi_startproc
 118              		@ Volatile: function does not return.
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 08B5     		push	{r3, lr}
 122              	.LCFI3:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 126              	.L11:
 103:Core/Src/stm32f3xx_it.c ****     while (1)
 127              		.loc 1 103 5 discriminator 1 view .LVU13
 104:Core/Src/stm32f3xx_it.c ****     {
 105:Core/Src/stm32f3xx_it.c ****         HAL_NVIC_SystemReset();
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 5


 128              		.loc 1 105 9 discriminator 1 view .LVU14
 129 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 130              	.LVL3:
 103:Core/Src/stm32f3xx_it.c ****     while (1)
 131              		.loc 1 103 11 discriminator 1 view .LVU15
 132 0006 FCE7     		b	.L11
 133              		.cfi_endproc
 134              	.LFE136:
 136              		.section	.text.UsageFault_Handler,"ax",%progbits
 137              		.align	1
 138              		.global	UsageFault_Handler
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	UsageFault_Handler:
 144              	.LFB137:
 106:Core/Src/stm32f3xx_it.c ****     }
 107:Core/Src/stm32f3xx_it.c **** }
 108:Core/Src/stm32f3xx_it.c **** 
 109:Core/Src/stm32f3xx_it.c **** /**
 110:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 111:Core/Src/stm32f3xx_it.c ****   */
 112:Core/Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 113:Core/Src/stm32f3xx_it.c **** {
 145              		.loc 1 113 1 view -0
 146              		.cfi_startproc
 147              		@ Volatile: function does not return.
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 08B5     		push	{r3, lr}
 151              	.LCFI4:
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 3, -8
 154              		.cfi_offset 14, -4
 155              	.L14:
 114:Core/Src/stm32f3xx_it.c ****     while (1)
 156              		.loc 1 114 5 discriminator 1 view .LVU17
 115:Core/Src/stm32f3xx_it.c ****     {
 116:Core/Src/stm32f3xx_it.c ****         HAL_NVIC_SystemReset();
 157              		.loc 1 116 9 discriminator 1 view .LVU18
 158 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 159              	.LVL4:
 114:Core/Src/stm32f3xx_it.c ****     while (1)
 160              		.loc 1 114 11 discriminator 1 view .LVU19
 161 0006 FCE7     		b	.L14
 162              		.cfi_endproc
 163              	.LFE137:
 165              		.section	.text.SVC_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	SVC_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 172              	SVC_Handler:
 173              	.LFB138:
 117:Core/Src/stm32f3xx_it.c ****     }
 118:Core/Src/stm32f3xx_it.c **** }
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 6


 119:Core/Src/stm32f3xx_it.c **** 
 120:Core/Src/stm32f3xx_it.c **** /**
 121:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 122:Core/Src/stm32f3xx_it.c ****   */
 123:Core/Src/stm32f3xx_it.c **** void SVC_Handler(void)
 124:Core/Src/stm32f3xx_it.c **** {
 174              		.loc 1 124 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI5:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 125:Core/Src/stm32f3xx_it.c ****     HAL_NVIC_SystemReset();
 183              		.loc 1 125 5 view .LVU21
 184 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 185              	.LVL5:
 126:Core/Src/stm32f3xx_it.c **** }
 186              		.loc 1 126 1 is_stmt 0 view .LVU22
 187 0006 08BD     		pop	{r3, pc}
 188              		.cfi_endproc
 189              	.LFE138:
 191              		.section	.text.DebugMon_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	DebugMon_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	DebugMon_Handler:
 199              	.LFB139:
 127:Core/Src/stm32f3xx_it.c **** 
 128:Core/Src/stm32f3xx_it.c **** /**
 129:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 130:Core/Src/stm32f3xx_it.c ****   */
 131:Core/Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 132:Core/Src/stm32f3xx_it.c **** {
 200              		.loc 1 132 1 is_stmt 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              	.LCFI6:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 3, -8
 208              		.cfi_offset 14, -4
 133:Core/Src/stm32f3xx_it.c ****     HAL_NVIC_SystemReset();
 209              		.loc 1 133 5 view .LVU24
 210 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 211              	.LVL6:
 134:Core/Src/stm32f3xx_it.c **** }
 212              		.loc 1 134 1 is_stmt 0 view .LVU25
 213 0006 08BD     		pop	{r3, pc}
 214              		.cfi_endproc
 215              	.LFE139:
 217              		.section	.text.PendSV_Handler,"ax",%progbits
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 7


 218              		.align	1
 219              		.global	PendSV_Handler
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	PendSV_Handler:
 225              	.LFB140:
 135:Core/Src/stm32f3xx_it.c **** 
 136:Core/Src/stm32f3xx_it.c **** /**
 137:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 138:Core/Src/stm32f3xx_it.c ****   */
 139:Core/Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 140:Core/Src/stm32f3xx_it.c **** {
 226              		.loc 1 140 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 08B5     		push	{r3, lr}
 231              	.LCFI7:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 3, -8
 234              		.cfi_offset 14, -4
 141:Core/Src/stm32f3xx_it.c ****     HAL_NVIC_SystemReset();
 235              		.loc 1 141 5 view .LVU27
 236 0002 FFF7FEFF 		bl	HAL_NVIC_SystemReset
 237              	.LVL7:
 142:Core/Src/stm32f3xx_it.c **** }
 238              		.loc 1 142 1 is_stmt 0 view .LVU28
 239 0006 08BD     		pop	{r3, pc}
 240              		.cfi_endproc
 241              	.LFE140:
 243              		.section	.text.SysTick_Handler,"ax",%progbits
 244              		.align	1
 245              		.global	SysTick_Handler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	SysTick_Handler:
 251              	.LFB141:
 143:Core/Src/stm32f3xx_it.c **** 
 144:Core/Src/stm32f3xx_it.c **** /**
 145:Core/Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 146:Core/Src/stm32f3xx_it.c ****   */
 147:Core/Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 148:Core/Src/stm32f3xx_it.c **** {
 252              		.loc 1 148 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI8:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 149:Core/Src/stm32f3xx_it.c ****     HAL_IncTick();
 261              		.loc 1 149 5 view .LVU30
 262 0002 FFF7FEFF 		bl	HAL_IncTick
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 8


 263              	.LVL8:
 150:Core/Src/stm32f3xx_it.c **** }
 264              		.loc 1 150 1 is_stmt 0 view .LVU31
 265 0006 08BD     		pop	{r3, pc}
 266              		.cfi_endproc
 267              	.LFE141:
 269              		.section	.text.DMA1_Channel6_IRQHandler,"ax",%progbits
 270              		.align	1
 271              		.global	DMA1_Channel6_IRQHandler
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	DMA1_Channel6_IRQHandler:
 277              	.LFB142:
 151:Core/Src/stm32f3xx_it.c **** 
 152:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 153:Core/Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 154:Core/Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 155:Core/Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 156:Core/Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 157:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 158:Core/Src/stm32f3xx_it.c **** 
 159:Core/Src/stm32f3xx_it.c **** /**
 160:Core/Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel6 global interrupt.
 161:Core/Src/stm32f3xx_it.c ****   */
 162:Core/Src/stm32f3xx_it.c **** void DMA1_Channel6_IRQHandler(void)
 163:Core/Src/stm32f3xx_it.c **** {
 278              		.loc 1 163 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282 0000 08B5     		push	{r3, lr}
 283              	.LCFI9:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 3, -8
 286              		.cfi_offset 14, -4
 164:Core/Src/stm32f3xx_it.c ****     HAL_DMA_IRQHandler(&hdma_usart2_rx);
 287              		.loc 1 164 5 view .LVU33
 288 0002 0248     		ldr	r0, .L26
 289 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 290              	.LVL9:
 165:Core/Src/stm32f3xx_it.c **** }
 291              		.loc 1 165 1 is_stmt 0 view .LVU34
 292 0008 08BD     		pop	{r3, pc}
 293              	.L27:
 294 000a 00BF     		.align	2
 295              	.L26:
 296 000c 00000000 		.word	hdma_usart2_rx
 297              		.cfi_endproc
 298              	.LFE142:
 300              		.section	.text.ADC1_2_IRQHandler,"ax",%progbits
 301              		.align	1
 302              		.global	ADC1_2_IRQHandler
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	ADC1_2_IRQHandler:
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 9


 308              	.LFB143:
 166:Core/Src/stm32f3xx_it.c **** 
 167:Core/Src/stm32f3xx_it.c **** /**
 168:Core/Src/stm32f3xx_it.c ****   * @brief This function handles ADC1 and ADC2 interrupts.
 169:Core/Src/stm32f3xx_it.c ****   */
 170:Core/Src/stm32f3xx_it.c **** void ADC1_2_IRQHandler(void)
 171:Core/Src/stm32f3xx_it.c **** {
 309              		.loc 1 171 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 08B5     		push	{r3, lr}
 314              	.LCFI10:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 3, -8
 317              		.cfi_offset 14, -4
 172:Core/Src/stm32f3xx_it.c ****     HAL_ADC_IRQHandler(&hadc2);
 318              		.loc 1 172 5 view .LVU36
 319 0002 0248     		ldr	r0, .L30
 320 0004 FFF7FEFF 		bl	HAL_ADC_IRQHandler
 321              	.LVL10:
 173:Core/Src/stm32f3xx_it.c **** }
 322              		.loc 1 173 1 is_stmt 0 view .LVU37
 323 0008 08BD     		pop	{r3, pc}
 324              	.L31:
 325 000a 00BF     		.align	2
 326              	.L30:
 327 000c 00000000 		.word	hadc2
 328              		.cfi_endproc
 329              	.LFE143:
 331              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 332              		.align	1
 333              		.global	EXTI9_5_IRQHandler
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	EXTI9_5_IRQHandler:
 339              	.LFB144:
 174:Core/Src/stm32f3xx_it.c **** 
 175:Core/Src/stm32f3xx_it.c **** /**
 176:Core/Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 177:Core/Src/stm32f3xx_it.c ****   */
 178:Core/Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 179:Core/Src/stm32f3xx_it.c **** {
 340              		.loc 1 179 1 is_stmt 1 view -0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              	.LCFI11:
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 3, -8
 348              		.cfi_offset 14, -4
 180:Core/Src/stm32f3xx_it.c ****     HAL_GPIO_EXTI_IRQHandler(DOOR_INT_Pin);
 349              		.loc 1 180 5 view .LVU39
 350 0002 2020     		movs	r0, #32
 351 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 10


 352              	.LVL11:
 181:Core/Src/stm32f3xx_it.c **** }
 353              		.loc 1 181 1 is_stmt 0 view .LVU40
 354 0008 08BD     		pop	{r3, pc}
 355              		.cfi_endproc
 356              	.LFE144:
 358              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 359              		.align	1
 360              		.global	TIM1_UP_TIM16_IRQHandler
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	TIM1_UP_TIM16_IRQHandler:
 366              	.LFB145:
 182:Core/Src/stm32f3xx_it.c **** 
 183:Core/Src/stm32f3xx_it.c **** /**
 184:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 185:Core/Src/stm32f3xx_it.c ****   */
 186:Core/Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 187:Core/Src/stm32f3xx_it.c **** {
 367              		.loc 1 187 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              	.LCFI12:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 188:Core/Src/stm32f3xx_it.c ****   	HAL_TIM_IRQHandler(&htim16);
 376              		.loc 1 188 4 view .LVU42
 377 0002 0248     		ldr	r0, .L36
 378 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 379              	.LVL12:
 189:Core/Src/stm32f3xx_it.c **** 
 190:Core/Src/stm32f3xx_it.c **** }
 380              		.loc 1 190 1 is_stmt 0 view .LVU43
 381 0008 08BD     		pop	{r3, pc}
 382              	.L37:
 383 000a 00BF     		.align	2
 384              	.L36:
 385 000c 00000000 		.word	htim16
 386              		.cfi_endproc
 387              	.LFE145:
 389              		.section	.text.TIM1_TRG_COM_TIM17_IRQHandler,"ax",%progbits
 390              		.align	1
 391              		.global	TIM1_TRG_COM_TIM17_IRQHandler
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	TIM1_TRG_COM_TIM17_IRQHandler:
 397              	.LFB146:
 191:Core/Src/stm32f3xx_it.c **** 
 192:Core/Src/stm32f3xx_it.c **** /**
 193:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 trigger, commutation and TIM17 interrupts.
 194:Core/Src/stm32f3xx_it.c ****   */
 195:Core/Src/stm32f3xx_it.c **** void TIM1_TRG_COM_TIM17_IRQHandler(void)
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 11


 196:Core/Src/stm32f3xx_it.c **** {
 398              		.loc 1 196 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 08B5     		push	{r3, lr}
 403              	.LCFI13:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 3, -8
 406              		.cfi_offset 14, -4
 197:Core/Src/stm32f3xx_it.c ****   	HAL_TIM_IRQHandler(&htim17);
 407              		.loc 1 197 4 view .LVU45
 408 0002 0248     		ldr	r0, .L40
 409 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 410              	.LVL13:
 198:Core/Src/stm32f3xx_it.c **** 
 199:Core/Src/stm32f3xx_it.c **** }
 411              		.loc 1 199 1 is_stmt 0 view .LVU46
 412 0008 08BD     		pop	{r3, pc}
 413              	.L41:
 414 000a 00BF     		.align	2
 415              	.L40:
 416 000c 00000000 		.word	htim17
 417              		.cfi_endproc
 418              	.LFE146:
 420              		.section	.text.USART1_IRQHandler,"ax",%progbits
 421              		.align	1
 422              		.global	USART1_IRQHandler
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	USART1_IRQHandler:
 428              	.LFB147:
 200:Core/Src/stm32f3xx_it.c **** 
 201:Core/Src/stm32f3xx_it.c **** /**
 202:Core/Src/stm32f3xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI li
 203:Core/Src/stm32f3xx_it.c ****   */
 204:Core/Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 205:Core/Src/stm32f3xx_it.c **** {
 429              		.loc 1 205 1 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 08B5     		push	{r3, lr}
 434              	.LCFI14:
 435              		.cfi_def_cfa_offset 8
 436              		.cfi_offset 3, -8
 437              		.cfi_offset 14, -4
 206:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 207:Core/Src/stm32f3xx_it.c **** 
 208:Core/Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 209:Core/Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 438              		.loc 1 209 3 view .LVU48
 439 0002 0248     		ldr	r0, .L44
 440 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 441              	.LVL14:
 210:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 12


 211:Core/Src/stm32f3xx_it.c **** 
 212:Core/Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 213:Core/Src/stm32f3xx_it.c **** }
 442              		.loc 1 213 1 is_stmt 0 view .LVU49
 443 0008 08BD     		pop	{r3, pc}
 444              	.L45:
 445 000a 00BF     		.align	2
 446              	.L44:
 447 000c 00000000 		.word	huart1
 448              		.cfi_endproc
 449              	.LFE147:
 451              		.section	.text.USART3_IRQHandler,"ax",%progbits
 452              		.align	1
 453              		.global	USART3_IRQHandler
 454              		.syntax unified
 455              		.thumb
 456              		.thumb_func
 458              	USART3_IRQHandler:
 459              	.LFB148:
 214:Core/Src/stm32f3xx_it.c **** 
 215:Core/Src/stm32f3xx_it.c **** /**
 216:Core/Src/stm32f3xx_it.c ****   * @brief This function handles USART3 global interrupt / USART3 wake-up interrupt through EXTI li
 217:Core/Src/stm32f3xx_it.c ****   */
 218:Core/Src/stm32f3xx_it.c **** void USART3_IRQHandler(void)
 219:Core/Src/stm32f3xx_it.c **** {
 460              		.loc 1 219 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464 0000 08B5     		push	{r3, lr}
 465              	.LCFI15:
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 3, -8
 468              		.cfi_offset 14, -4
 220:Core/Src/stm32f3xx_it.c ****     HAL_UART_IRQHandler(&huart3);
 469              		.loc 1 220 5 view .LVU51
 470 0002 0248     		ldr	r0, .L48
 471 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 472              	.LVL15:
 221:Core/Src/stm32f3xx_it.c **** }
 473              		.loc 1 221 1 is_stmt 0 view .LVU52
 474 0008 08BD     		pop	{r3, pc}
 475              	.L49:
 476 000a 00BF     		.align	2
 477              	.L48:
 478 000c 00000000 		.word	huart3
 479              		.cfi_endproc
 480              	.LFE148:
 482              		.section	.text.DMA2_Channel1_IRQHandler,"ax",%progbits
 483              		.align	1
 484              		.global	DMA2_Channel1_IRQHandler
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	DMA2_Channel1_IRQHandler:
 490              	.LFB149:
 222:Core/Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 13


 223:Core/Src/stm32f3xx_it.c **** 
 224:Core/Src/stm32f3xx_it.c **** /**
 225:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Timer 6 interrupt and DAC underrun interrupts.
 226:Core/Src/stm32f3xx_it.c ****   */
 227:Core/Src/stm32f3xx_it.c **** void DMA2_Channel1_IRQHandler(void)
 228:Core/Src/stm32f3xx_it.c **** {
 491              		.loc 1 228 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 08B5     		push	{r3, lr}
 496              	.LCFI16:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 3, -8
 499              		.cfi_offset 14, -4
 229:Core/Src/stm32f3xx_it.c **** 	HAL_DMA_IRQHandler(&hdma_adc2);
 500              		.loc 1 229 2 view .LVU54
 501 0002 0248     		ldr	r0, .L52
 502 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 503              	.LVL16:
 230:Core/Src/stm32f3xx_it.c **** }
 504              		.loc 1 230 1 is_stmt 0 view .LVU55
 505 0008 08BD     		pop	{r3, pc}
 506              	.L53:
 507 000a 00BF     		.align	2
 508              	.L52:
 509 000c 00000000 		.word	hdma_adc2
 510              		.cfi_endproc
 511              	.LFE149:
 513              		.text
 514              	.Letext0:
 515              		.file 2 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 516              		.file 3 "d:\\3.tools\\arm_gcc_toolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 517              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 518              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 519              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 520              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 521              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 522              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 523              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 524              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 525              		.file 12 "Core/Inc/main.h"
 526              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 527              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 528              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:20     .text.NMI_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:50     .text.HardFault_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:56     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:79     .text.MemManage_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:85     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:108    .text.BusFault_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:114    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:137    .text.UsageFault_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:143    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:166    .text.SVC_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:172    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:192    .text.DebugMon_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:198    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:218    .text.PendSV_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:224    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:244    .text.SysTick_Handler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:250    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:270    .text.DMA1_Channel6_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:276    .text.DMA1_Channel6_IRQHandler:00000000 DMA1_Channel6_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:296    .text.DMA1_Channel6_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:301    .text.ADC1_2_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:307    .text.ADC1_2_IRQHandler:00000000 ADC1_2_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:327    .text.ADC1_2_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:332    .text.EXTI9_5_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:338    .text.EXTI9_5_IRQHandler:00000000 EXTI9_5_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:359    .text.TIM1_UP_TIM16_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:365    .text.TIM1_UP_TIM16_IRQHandler:00000000 TIM1_UP_TIM16_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:385    .text.TIM1_UP_TIM16_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:390    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:396    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 TIM1_TRG_COM_TIM17_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:416    .text.TIM1_TRG_COM_TIM17_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:421    .text.USART1_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:427    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:447    .text.USART1_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:452    .text.USART3_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:458    .text.USART3_IRQHandler:00000000 USART3_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:478    .text.USART3_IRQHandler:0000000c $d
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:483    .text.DMA2_Channel1_IRQHandler:00000000 $t
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:489    .text.DMA2_Channel1_IRQHandler:00000000 DMA2_Channel1_IRQHandler
C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s:509    .text.DMA2_Channel1_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_NVIC_SystemReset
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart2_rx
HAL_ADC_IRQHandler
hadc2
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
htim16
htim17
HAL_UART_IRQHandler
huart1
ARM GAS  C:\Users\jisu8\AppData\Local\Temp\cc0a2aC0.s 			page 15


huart3
hdma_adc2
